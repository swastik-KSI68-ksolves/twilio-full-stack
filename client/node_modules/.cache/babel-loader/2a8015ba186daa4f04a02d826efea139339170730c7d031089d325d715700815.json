{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @packageDocumentation\n * @internalapi\n */\n// @ts-nocheck\n// NOTE (csantos): This file was taken directly from twilio-video and has been renamed from JS to TS only.\n// It needs to be re-written as part of the overall updating of the files to TS.\nvar events_1 = require(\"events\");\nvar Backoff = /** @class */function (_super) {\n  __extends(Backoff, _super);\n  /**\n   * Construct a {@link Backoff}.\n   * @param {object} options\n   * @property {number} min - Initial timeout in milliseconds [100]\n   * @property {number} max - Max timeout [10000]\n   * @property {boolean} jitter - Apply jitter [0]\n   * @property {number} factor - Multiplication factor for Backoff operation [2]\n   */\n  function Backoff(options) {\n    var _this = _super.call(this) || this;\n    Object.defineProperties(_this, {\n      _attempts: {\n        value: 0,\n        writable: true\n      },\n      _duration: {\n        enumerable: false,\n        get: function () {\n          var ms = this._min * Math.pow(this._factor, this._attempts);\n          if (this._jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this._jitter * ms);\n            // tslint:disable-next-line\n            ms = (Math.floor(rand * 10) & 1) === 0 ? ms - deviation : ms + deviation;\n          }\n          // tslint:disable-next-line\n          return Math.min(ms, this._max) | 0;\n        }\n      },\n      _factor: {\n        value: options.factor || 2\n      },\n      _jitter: {\n        value: options.jitter > 0 && options.jitter <= 1 ? options.jitter : 0\n      },\n      _max: {\n        value: options.max || 10000\n      },\n      _min: {\n        value: options.min || 100\n      },\n      _timeoutID: {\n        value: null,\n        writable: true\n      }\n    });\n    return _this;\n  }\n  Backoff.prototype.backoff = function () {\n    var _this = this;\n    var duration = this._duration;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n    this.emit('backoff', this._attempts, duration);\n    this._timeoutID = setTimeout(function () {\n      _this.emit('ready', _this._attempts, duration);\n      _this._attempts++;\n    }, duration);\n  };\n  Backoff.prototype.reset = function () {\n    this._attempts = 0;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  };\n  return Backoff;\n}(events_1.EventEmitter);\nexports.default = Backoff;","map":{"version":3,"names":["events_1","require","Backoff","_super","__extends","options","_this","call","Object","defineProperties","_attempts","value","writable","_duration","enumerable","get","ms","_min","Math","pow","_factor","_jitter","rand","random","deviation","floor","min","_max","factor","jitter","max","_timeoutID","prototype","backoff","duration","clearTimeout","emit","setTimeout","reset","EventEmitter","exports","default"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/@twilio/voice-sdk/lib/twilio/backoff.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @internalapi\n */\n// @ts-nocheck\n// NOTE (csantos): This file was taken directly from twilio-video and has been renamed from JS to TS only.\n// It needs to be re-written as part of the overall updating of the files to TS.\nimport { EventEmitter } from 'events';\n\nclass Backoff extends EventEmitter {\n  /**\n   * Construct a {@link Backoff}.\n   * @param {object} options\n   * @property {number} min - Initial timeout in milliseconds [100]\n   * @property {number} max - Max timeout [10000]\n   * @property {boolean} jitter - Apply jitter [0]\n   * @property {number} factor - Multiplication factor for Backoff operation [2]\n   */\n  constructor(options) {\n    super();\n    Object.defineProperties(this, {\n      _attempts: {\n        value: 0,\n        writable: true,\n      },\n      _duration: {\n        enumerable: false,\n        get() {\n          let ms = this._min * Math.pow(this._factor, this._attempts);\n          if (this._jitter) {\n            const rand =  Math.random();\n            const deviation = Math.floor(rand * this._jitter * ms);\n            // tslint:disable-next-line\n            ms = (Math.floor(rand * 10) & 1) === 0  ? ms - deviation : ms + deviation;\n          }\n          // tslint:disable-next-line\n          return Math.min(ms, this._max) | 0;\n        },\n      },\n      _factor: { value: options.factor || 2 },\n      _jitter: { value: options.jitter > 0 && options.jitter <= 1 ? options.jitter : 0 },\n      _max: { value: options.max || 10000 },\n      _min: { value: options.min || 100 },\n      _timeoutID: {\n        value: null,\n        writable: true,\n      },\n    });\n  }\n\n  backoff() {\n    const duration = this._duration;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n\n    this.emit('backoff', this._attempts, duration);\n    this._timeoutID = setTimeout(() => {\n      this.emit('ready', this._attempts, duration);\n      this._attempts++;\n    }, duration);\n  }\n\n  reset() {\n    this._attempts = 0;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n\nexport default Backoff;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIA;AACA;AACA;AACA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,OAAA,0BAAAC,MAAA;EAAsBC,SAAA,CAAAF,OAAA,EAAAC,MAAA;EACpB;;;;;;;;EAQA,SAAAD,QAAYG,OAAO;IAAnB,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,MAAO;IACPC,MAAM,CAACC,gBAAgB,CAACH,KAAI,EAAE;MAC5BI,SAAS,EAAE;QACTC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE;OACX;MACDC,SAAS,EAAE;QACTC,UAAU,EAAE,KAAK;QACjBC,GAAG,WAAAA,CAAA;UACD,IAAIC,EAAE,GAAG,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,EAAE,IAAI,CAACV,SAAS,CAAC;UAC3D,IAAI,IAAI,CAACW,OAAO,EAAE;YAChB,IAAMC,IAAI,GAAIJ,IAAI,CAACK,MAAM,EAAE;YAC3B,IAAMC,SAAS,GAAGN,IAAI,CAACO,KAAK,CAACH,IAAI,GAAG,IAAI,CAACD,OAAO,GAAGL,EAAE,CAAC;YACtD;YACAA,EAAE,GAAG,CAACE,IAAI,CAACO,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAIN,EAAE,GAAGQ,SAAS,GAAGR,EAAE,GAAGQ,SAAS;;UAE3E;UACA,OAAON,IAAI,CAACQ,GAAG,CAACV,EAAE,EAAE,IAAI,CAACW,IAAI,CAAC,GAAG,CAAC;QACpC;OACD;MACDP,OAAO,EAAE;QAAET,KAAK,EAAEN,OAAO,CAACuB,MAAM,IAAI;MAAC,CAAE;MACvCP,OAAO,EAAE;QAAEV,KAAK,EAAEN,OAAO,CAACwB,MAAM,GAAG,CAAC,IAAIxB,OAAO,CAACwB,MAAM,IAAI,CAAC,GAAGxB,OAAO,CAACwB,MAAM,GAAG;MAAC,CAAE;MAClFF,IAAI,EAAE;QAAEhB,KAAK,EAAEN,OAAO,CAACyB,GAAG,IAAI;MAAK,CAAE;MACrCb,IAAI,EAAE;QAAEN,KAAK,EAAEN,OAAO,CAACqB,GAAG,IAAI;MAAG,CAAE;MACnCK,UAAU,EAAE;QACVpB,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE;;KAEb,CAAC;;EACJ;EAEAV,OAAA,CAAA8B,SAAA,CAAAC,OAAO,GAAP;IAAA,IAAA3B,KAAA;IACE,IAAM4B,QAAQ,GAAG,IAAI,CAACrB,SAAS;IAC/B,IAAI,IAAI,CAACkB,UAAU,EAAE;MACnBI,YAAY,CAAC,IAAI,CAACJ,UAAU,CAAC;MAC7B,IAAI,CAACA,UAAU,GAAG,IAAI;;IAGxB,IAAI,CAACK,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC1B,SAAS,EAAEwB,QAAQ,CAAC;IAC9C,IAAI,CAACH,UAAU,GAAGM,UAAU,CAAC;MAC3B/B,KAAI,CAAC8B,IAAI,CAAC,OAAO,EAAE9B,KAAI,CAACI,SAAS,EAAEwB,QAAQ,CAAC;MAC5C5B,KAAI,CAACI,SAAS,EAAE;IAClB,CAAC,EAAEwB,QAAQ,CAAC;EACd,CAAC;EAEDhC,OAAA,CAAA8B,SAAA,CAAAM,KAAK,GAAL;IACE,IAAI,CAAC5B,SAAS,GAAG,CAAC;IAClB,IAAI,IAAI,CAACqB,UAAU,EAAE;MACnBI,YAAY,CAAC,IAAI,CAACJ,UAAU,CAAC;MAC7B,IAAI,CAACA,UAAU,GAAG,IAAI;;EAE1B,CAAC;EACH,OAAA7B,OAAC;AAAD,CAAC,CA9DqBF,QAAA,CAAAuC,YAAY;AAgElCC,OAAA,CAAAC,OAAA,GAAevC,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}