{"ast":null,"code":"/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : dtlsRole || 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId || transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' + trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function (url) {\n        var validTurn = url.indexOf('turn:') === 0 && url.indexOf('transport=udp') !== -1 && url.indexOf('turn:[') === -1 && !hasTurn;\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 && url.indexOf('?transport=udp') === -1;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n  var findCodecByPayloadType = function (pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt || codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n  var rtxCapabilityMatches = function (lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec && lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n  localCapabilities.codecs.forEach(function (lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() && lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' && lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec, localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels, rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function (fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type && lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n  localCapabilities.headerExtensions.forEach(function (lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length; i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldÑ• are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates().find(function (remoteCandidate) {\n    return candidate.foundation === remoteCandidate.foundation && candidate.ip === remoteCandidate.ip && candidate.port === remoteCandidate.port && candidate.priority === remoteCandidate.priority && candidate.protocol === remoteCandidate.protocol && candidate.type === remoteCandidate.type;\n  });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\nmodule.exports = function (window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack', {\n      track: track\n    }));\n  }\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack', {\n      track: track\n    }));\n  }\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {\n      receiver: receiver\n    };\n    trackEvent.streams = streams;\n    window.setTimeout(function () {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n  var RTCPeerConnection = function (config) {\n    var pc = this;\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(function (method) {\n      pc[method] = _eventTarget[method].bind(_eventTarget);\n    });\n    this.canTrickleIceCandidates = null;\n    this.needNegotiation = false;\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this.localDescription = null;\n    this.remoteDescription = null;\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n    config = JSON.parse(JSON.stringify(config || {}));\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw makeError('NotSupportedError', 'rtcpMuxPolicy \\'negotiate\\' is not supported');\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n  RTCPeerConnection.prototype._dispatchEvent = function (name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n  RTCPeerConnection.prototype._emitGatheringStateChange = function () {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n  RTCPeerConnection.prototype.getConfiguration = function () {\n    return this._config;\n  };\n  RTCPeerConnection.prototype.getLocalStreams = function () {\n    return this.localStreams;\n  };\n  RTCPeerConnection.prototype.getRemoteStreams = function () {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function (kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n  RTCPeerConnection.prototype.addTrack = function (track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call addTrack on a closed peerconnection.');\n    }\n    var alreadyExists = this.transceivers.find(function (s) {\n      return s.track === track;\n    });\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track && this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n    this._maybeFireNegotiationNeeded();\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track, transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n  RTCPeerConnection.prototype.addStream = function (stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function (track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function (track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function (event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n  RTCPeerConnection.prototype.removeTrack = function (sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call removeTrack on a closed peerconnection.');\n    }\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.');\n    }\n    var transceiver = this.transceivers.find(function (t) {\n      return t.rtpSender === sender;\n    });\n    if (!transceiver) {\n      throw makeError('InvalidAccessError', 'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function (t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 && this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n    this._maybeFireNegotiationNeeded();\n  };\n  RTCPeerConnection.prototype.removeStream = function (stream) {\n    var pc = this;\n    stream.getTracks().forEach(function (track) {\n      var sender = pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n  RTCPeerConnection.prototype.getSenders = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpSender;\n    }).map(function (transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n  RTCPeerConnection.prototype.getReceivers = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpReceiver;\n    }).map(function (transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n  RTCPeerConnection.prototype._createIceGatherer = function (sdpMLineIndex, usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state', {\n      value: 'new',\n      writable: true\n    });\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function (event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function (mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents = this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function (evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // Ñ•dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {\n        sdpMid: mid,\n        sdpMLineIndex: sdpMLineIndex\n      };\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateCompleteâ€¥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate, SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] += 'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] += 'a=end-of-candidates\\r\\n';\n      }\n      pc.localDescription.sdp = SDPUtils.getDescription(pc.localDescription.sdp) + sections.join('');\n      var complete = pc.transceivers.every(function (transceiver) {\n        return transceiver.iceGatherer && transceiver.iceGatherer.state === 'completed';\n      });\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function () {\n      bufferedCandidateEvents.forEach(function (e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function () {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function () {\n      pc._updateConnectionState();\n    };\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function () {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function () {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state', {\n        value: 'failed',\n        writable: true\n      });\n      pc._updateConnectionState();\n    };\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function (sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function (transceiver, send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video' && transceiver.recvEncodingParameters && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function (p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n  RTCPeerConnection.prototype.setLocalDescription = function (description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n    if (!isActionAllowedInSignalingState('setLocalDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set local ' + description.type + ' in state ' + pc.signalingState));\n    }\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n      pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters, isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities, remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver, params.codecs.length > 0, false);\n        }\n      });\n    }\n    pc.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    return Promise.resolve();\n  };\n  RTCPeerConnection.prototype.setRemoteDescription = function (description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n    if (!isActionAllowedInSignalingState('setRemoteDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set remote ' + description.type + ' in state ' + pc.signalingState));\n    }\n    var streams = {};\n    pc.remoteStreams.forEach(function (stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart, 'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart, 'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ').indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n    sections.forEach(function (mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters = SDPUtils.parseRtpEncodingParameters(mediaSection);\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n      var isComplete = SDPUtils.matchPrefix(mediaSection, 'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:').map(function (cand) {\n        return SDPUtils.parseCandidate(cand);\n      }).filter(function (cand) {\n        return cand.component === 1;\n      });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') && !rejected && usingBundle && sdpMLineIndex > 0 && pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer = pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport = pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport = pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] || pc._createTransceiver(kind);\n        transceiver.mid = mid;\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, usingBundle);\n        }\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n            return codec.name !== 'rtx';\n          });\n        }\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver || new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function () {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function () {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function (s) {\n            var nativeTrack = s.getTracks().find(function (t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex], false, isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters = recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities = remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) && (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters, 'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n        pc._transceive(transceiver, direction === 'sendrecv' || direction === 'recvonly', direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver && (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n    pc.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function (sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function () {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n        receiverList.forEach(function (item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function (item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function () {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function (transceiver) {\n        if (transceiver.iceTransport && transceiver.iceTransport.state === 'new' && transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' + 'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n    return Promise.resolve();\n  };\n  RTCPeerConnection.prototype.close = function () {\n    this.transceivers.forEach(function (transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function (newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function () {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function () {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n  RTCPeerConnection.prototype.createOffer = function () {\n    var pc = this;\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createOffer after close'));\n    }\n    var numAudioTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError('Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n    pc.transceivers.forEach(function (transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, pc.usingBundle);\n      }\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n          return codec.name !== 'rtx';\n        });\n      }\n      localCapabilities.codecs.forEach(function (codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' && codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities && transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function (remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() && codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function (hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities && transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function (rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' && !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n      }\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities, 'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' && (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function (cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n  RTCPeerConnection.prototype.createAnswer = function () {\n    var pc = this;\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer after close'));\n    }\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(pc.remoteDescription.sdp).length;\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' + 'c=IN IP4 0.0.0.0\\r\\n' + 'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' && !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n      var hasRtx = commonCapabilities.codecs.filter(function (c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n      sdp += writeMediaSection(transceiver, commonCapabilities, 'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters && transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n  RTCPeerConnection.prototype.addIceCandidate = function (candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function (resolve, reject) {\n      if (!pc.remoteDescription) {\n        return reject(makeError('InvalidStateError', 'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].isDatachannel) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc.remoteDescription.sdp = SDPUtils.getDescription(pc.remoteDescription.sdp) + sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.isDatachannel) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ? SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || sdpMLineIndex > 0 && transceiver.iceTransport !== pc.transceivers[0].iceTransport) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError', 'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' + (cand.type ? candidateString : 'end-of-candidates') + '\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n        } else {\n          return reject(makeError('OperationError', 'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n  RTCPeerConnection.prototype.getStats = function () {\n    var promises = [];\n    this.transceivers.forEach(function (transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport', 'dtlsTransport'].forEach(function (method) {\n        if (transceiver[method]) {\n          promises.push(transceiver[method].getStats());\n        }\n      });\n    });\n    var fixStatsType = function (stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function (resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function (res) {\n        res.forEach(function (result) {\n          Object.keys(result).forEach(function (id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  };\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n      if (typeof args[0] === 'function' || typeof args[1] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, [arguments[2]]).then(function (description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function (error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n      if (typeof args[1] === 'function' || typeof args[2] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function (error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  return RTCPeerConnection;\n};","map":{"version":3,"names":["SDPUtils","require","writeMediaSection","transceiver","caps","type","stream","dtlsRole","sdp","writeRtpDescription","kind","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","trackId","_initialTrackId","track","id","msid","sendEncodingParameters","ssrc","rtx","localCName","filterIceServers","iceServers","edgeVersion","hasTurn","JSON","parse","stringify","filter","server","urls","url","console","warn","isString","validTurn","indexOf","length","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","parseInt","i","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","name","toLowerCase","forEach","clockRate","numChannels","Math","min","push","rtcpFeedback","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","find","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","description","e","Error","module","exports","window","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","removeTrack","fireAddTrack","pc","receiver","streams","trackEvent","Event","setTimeout","_dispatchEvent","RTCPeerConnection","config","_eventTarget","document","createDocumentFragment","method","bind","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","localDescription","remoteDescription","iceConnectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","undefined","_isClosed","prototype","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","alreadyExists","s","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","enabled","sender","TypeError","t","stop","map","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","shift","Object","defineProperty","value","writable","bufferedCandidateEvents","bufferCandidates","end","keys","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","component","serializedCandidate","writeCandidate","assign","parseCandidate","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","Promise","reject","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","rejected","isRejected","isDatachannel","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","resolve","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","RTCRtpReceiver","getCapabilities","codec","isNewTrack","MediaStream","get","default","nativeTrack","sid","item","close","newState","states","closed","connecting","checking","connected","completed","disconnected","failed","new","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","hasRtx","c","reducedSize","addIceCandidate","candidateString","trim","getStats","promises","fixStatsType","stat","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","results","Map","all","then","res","result","set","methods","nativeMethod","args","apply","error"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"sourcesContent":["/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldÑ• are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this.localDescription = null;\n    this.remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // Ñ•dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateCompleteâ€¥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc.localDescription.sdp =\n          SDPUtils.getDescription(pc.localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc.remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc.remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].isDatachannel) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc.remoteDescription.sdp =\n              SDPUtils.getDescription(pc.remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.isDatachannel) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  };\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}