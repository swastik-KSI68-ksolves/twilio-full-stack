{"ast":null,"code":"'use strict';\n\nvar _require = require('../errors'),\n  InvalidArgumentError = _require.InvalidArgumentError,\n  MediaErrors = _require.MediaErrors,\n  NotSupportedError = _require.NotSupportedError,\n  SignalingErrors = _require.SignalingErrors;\nvar Log = require('../log').default;\nvar util = require('../util');\nvar RTCPC = require('./rtcpc');\nvar _require2 = require('./sdp'),\n  setIceAggressiveNomination = _require2.setIceAggressiveNomination;\nvar ICE_GATHERING_TIMEOUT = 15000;\nvar ICE_GATHERING_FAIL_NONE = 'none';\nvar ICE_GATHERING_FAIL_TIMEOUT = 'timeout';\nvar INITIAL_ICE_CONNECTION_STATE = 'new';\nvar VOLUME_INTERVAL_MS = 50;\n\n/**\n * @typedef {Object} PeerConnection\n * @param audioHelper\n * @param pstream\n * @param options\n * @return {PeerConnection}\n * @constructor\n */\nfunction PeerConnection(audioHelper, pstream, getUserMedia, options) {\n  if (!audioHelper || !pstream || !getUserMedia) {\n    throw new InvalidArgumentError('Audiohelper, pstream and getUserMedia are required arguments');\n  }\n  if (!(this instanceof PeerConnection)) {\n    return new PeerConnection(audioHelper, pstream, getUserMedia, options);\n  }\n  function noop() {}\n  this.onaudio = noop;\n  this.onopen = noop;\n  this.onerror = noop;\n  this.onclose = noop;\n  this.ondisconnected = noop;\n  this.onfailed = noop;\n  this.onconnected = noop;\n  this.onreconnected = noop;\n  this.onsignalingstatechange = noop;\n  this.ondtlstransportstatechange = noop;\n  this.onicegatheringfailure = noop;\n  this.onicegatheringstatechange = noop;\n  this.oniceconnectionstatechange = noop;\n  this.onpcconnectionstatechange = noop;\n  this.onicecandidate = noop;\n  this.onselectedcandidatepairchange = noop;\n  this.onvolume = noop;\n  this.version = null;\n  this.pstream = pstream;\n  this.stream = null;\n  this.sinkIds = new Set(['default']);\n  this.outputs = new Map();\n  this.status = 'connecting';\n  this.callSid = null;\n  this.isMuted = false;\n  this.getUserMedia = getUserMedia;\n  var AudioContext = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  this._isSinkSupported = !!AudioContext && typeof HTMLAudioElement !== 'undefined' && HTMLAudioElement.prototype.setSinkId;\n  // NOTE(mmalavalli): Since each Connection creates its own AudioContext,\n  // after 6 instances an exception is thrown. Refer https://www.w3.org/2011/audio/track/issues/3.\n  // In order to get around it, we are re-using the Device's AudioContext.\n  this._audioContext = AudioContext && audioHelper._audioContext;\n  this._hasIceCandidates = false;\n  this._hasIceGatheringFailures = false;\n  this._iceGatheringTimeoutId = null;\n  this._masterAudio = null;\n  this._masterAudioDeviceId = null;\n  this._mediaStreamSource = null;\n  this._dtmfSender = null;\n  this._dtmfSenderUnsupported = false;\n  this._callEvents = [];\n  this._nextTimeToPublish = Date.now();\n  this._onAnswerOrRinging = noop;\n  this._onHangup = noop;\n  this._remoteStream = null;\n  this._shouldManageStream = true;\n  this._iceState = INITIAL_ICE_CONNECTION_STATE;\n  this._isUnifiedPlan = options.isUnifiedPlan;\n  this.options = options = options || {};\n  this.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  this.util = options.util || util;\n  this.codecPreferences = options.codecPreferences;\n  this._log = Log.getInstance();\n  return this;\n}\nPeerConnection.prototype.uri = function () {\n  return this._uri;\n};\n\n/**\n * Open the underlying RTCPeerConnection with a MediaStream obtained by\n *   passed constraints. The resulting MediaStream is created internally\n *   and will therefore be managed and destroyed internally.\n * @param {MediaStreamConstraints} constraints\n */\nPeerConnection.prototype.openWithConstraints = function (constraints) {\n  return this.getUserMedia({\n    audio: constraints\n  }).then(this._setInputTracksFromStream.bind(this, false));\n};\n\n/**\n * Replace the existing input audio tracks with the audio tracks from the\n *   passed input audio stream. We re-use the existing stream because\n *   the AnalyzerNode is bound to the stream.\n * @param {MediaStream} stream\n */\nPeerConnection.prototype.setInputTracksFromStream = function (stream) {\n  var self = this;\n  return this._setInputTracksFromStream(true, stream).then(function () {\n    self._shouldManageStream = false;\n  });\n};\nPeerConnection.prototype._createAnalyser = function (audioContext, options) {\n  options = Object.assign({\n    fftSize: 32,\n    smoothingTimeConstant: 0.3\n  }, options);\n  var analyser = audioContext.createAnalyser();\n  for (var field in options) {\n    analyser[field] = options[field];\n  }\n  return analyser;\n};\nPeerConnection.prototype._setVolumeHandler = function (handler) {\n  this.onvolume = handler;\n};\nPeerConnection.prototype._startPollingVolume = function () {\n  if (!this._audioContext || !this.stream || !this._remoteStream) {\n    return;\n  }\n  var audioContext = this._audioContext;\n  var inputAnalyser = this._inputAnalyser = this._createAnalyser(audioContext);\n  var inputBufferLength = inputAnalyser.frequencyBinCount;\n  var inputDataArray = new Uint8Array(inputBufferLength);\n  this._inputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n  var outputAnalyser = this._outputAnalyser = this._createAnalyser(audioContext);\n  var outputBufferLength = outputAnalyser.frequencyBinCount;\n  var outputDataArray = new Uint8Array(outputBufferLength);\n  this._outputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n  this._updateInputStreamSource(this.stream);\n  this._updateOutputStreamSource(this._remoteStream);\n  var self = this;\n  setTimeout(function emitVolume() {\n    if (!self._audioContext) {\n      return;\n    } else if (self.status === 'closed') {\n      self._inputAnalyser.disconnect();\n      self._outputAnalyser.disconnect();\n      self._inputAnalyser2.disconnect();\n      self._outputAnalyser2.disconnect();\n      return;\n    }\n    self._inputAnalyser.getByteFrequencyData(inputDataArray);\n    var inputVolume = self.util.average(inputDataArray);\n    self._inputAnalyser2.getByteFrequencyData(inputDataArray);\n    var inputVolume2 = self.util.average(inputDataArray);\n    self._outputAnalyser.getByteFrequencyData(outputDataArray);\n    var outputVolume = self.util.average(outputDataArray);\n    self._outputAnalyser2.getByteFrequencyData(outputDataArray);\n    var outputVolume2 = self.util.average(outputDataArray);\n    self.onvolume(inputVolume / 255, outputVolume / 255, inputVolume2, outputVolume2);\n    setTimeout(emitVolume, VOLUME_INTERVAL_MS);\n  }, VOLUME_INTERVAL_MS);\n};\nPeerConnection.prototype._stopStream = function _stopStream(stream) {\n  // We shouldn't stop the tracks if they were not created inside\n  //   this PeerConnection.\n  if (!this._shouldManageStream) {\n    return;\n  }\n  if (typeof MediaStreamTrack.prototype.stop === 'function') {\n    var audioTracks = typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.stop();\n    });\n  }\n  // NOTE(mroberts): This is just a fallback to any ancient browsers that may\n  // not implement MediaStreamTrack.stop.\n  else {\n    stream.stop();\n  }\n};\n\n/**\n * Update the stream source with the new input audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateInputStreamSource = function (stream) {\n  if (this._inputStreamSource) {\n    this._inputStreamSource.disconnect();\n  }\n  try {\n    this._inputStreamSource = this._audioContext.createMediaStreamSource(stream);\n    this._inputStreamSource.connect(this._inputAnalyser);\n    this._inputStreamSource.connect(this._inputAnalyser2);\n  } catch (ex) {\n    this._log.warn('Unable to update input MediaStreamSource', ex);\n    this._inputStreamSource = null;\n  }\n};\n\n/**\n * Update the stream source with the new ouput audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateOutputStreamSource = function (stream) {\n  if (this._outputStreamSource) {\n    this._outputStreamSource.disconnect();\n  }\n  try {\n    this._outputStreamSource = this._audioContext.createMediaStreamSource(stream);\n    this._outputStreamSource.connect(this._outputAnalyser);\n    this._outputStreamSource.connect(this._outputAnalyser2);\n  } catch (ex) {\n    this._log.warn('Unable to update output MediaStreamSource', ex);\n    this._outputStreamSource = null;\n  }\n};\n\n/**\n * Replace the tracks of the current stream with new tracks. We do this rather than replacing the\n *   whole stream because AnalyzerNodes are bound to a stream.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksFromStream = function (shouldClone, newStream) {\n  return this._isUnifiedPlan ? this._setInputTracksForUnifiedPlan(shouldClone, newStream) : this._setInputTracksForPlanB(shouldClone, newStream);\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'plan-b' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForPlanB = function (shouldClone, newStream) {\n  var _this = this;\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n  var localStream = this.stream;\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    this._stopStream(localStream);\n    removeStream(this.version.pc, localStream);\n    localStream.getAudioTracks().forEach(localStream.removeTrack, localStream);\n    newStream.getAudioTracks().forEach(localStream.addTrack, localStream);\n    addStream(this.version.pc, newStream);\n    this._updateInputStreamSource(this.stream);\n  }\n\n  // Apply mute settings to new input track\n  this.mute(this.isMuted);\n  if (!this.version) {\n    return Promise.resolve(this.stream);\n  }\n  return new Promise(function (resolve, reject) {\n    _this.version.createOffer(_this.options.maxAverageBitrate, _this.codecPreferences, {\n      audio: true\n    }, function () {\n      _this.version.processAnswer(_this.codecPreferences, _this._answerSdp, function () {\n        resolve(_this.stream);\n      }, reject);\n    }, reject);\n  });\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'unified-plan' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForUnifiedPlan = function (shouldClone, newStream) {\n  var _this2 = this;\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n  var localStream = this.stream;\n  var getStreamPromise = function getStreamPromise() {\n    // Apply mute settings to new input track\n    _this2.mute(_this2.isMuted);\n    return Promise.resolve(_this2.stream);\n  };\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    // If the call was started with gUM, and we are now replacing that track with an\n    // external stream's tracks, we should stop the old managed track.\n    if (this._shouldManageStream) {\n      this._stopStream(localStream);\n    }\n    if (!this._sender) {\n      this._sender = this.version.pc.getSenders()[0];\n    }\n    return this._sender.replaceTrack(newStream.getAudioTracks()[0]).then(function () {\n      _this2._updateInputStreamSource(newStream);\n      return getStreamPromise();\n    });\n  }\n  return getStreamPromise();\n};\nPeerConnection.prototype._onInputDevicesChanged = function () {\n  if (!this.stream) {\n    return;\n  }\n\n  // If all of our active tracks are ended, then our active input was lost\n  var activeInputWasLost = this.stream.getAudioTracks().every(function (track) {\n    return track.readyState === 'ended';\n  });\n\n  // We only want to act if we manage the stream in PeerConnection (It was created\n  // here, rather than passed in.)\n  if (activeInputWasLost && this._shouldManageStream) {\n    this.openWithConstraints(true);\n  }\n};\nPeerConnection.prototype._onIceGatheringFailure = function (type) {\n  this._hasIceGatheringFailures = true;\n  this.onicegatheringfailure(type);\n};\nPeerConnection.prototype._onMediaConnectionStateChange = function (newState) {\n  var previousState = this._iceState;\n  if (previousState === newState || newState !== 'connected' && newState !== 'disconnected' && newState !== 'failed') {\n    return;\n  }\n  this._iceState = newState;\n  var message = void 0;\n  switch (newState) {\n    case 'connected':\n      if (previousState === 'disconnected' || previousState === 'failed') {\n        message = 'ICE liveliness check succeeded. Connection with Twilio restored';\n        this._log.info(message);\n        this.onreconnected(message);\n      } else {\n        message = 'Media connection established.';\n        this._log.info(message);\n        this.onconnected(message);\n      }\n      this._stopIceGatheringTimeout();\n      this._hasIceGatheringFailures = false;\n      break;\n    case 'disconnected':\n      message = 'ICE liveliness check failed. May be having trouble connecting to Twilio';\n      this._log.info(message);\n      this.ondisconnected(message);\n      break;\n    case 'failed':\n      message = 'Connection with Twilio was interrupted.';\n      this._log.info(message);\n      this.onfailed(message);\n      break;\n  }\n};\nPeerConnection.prototype._setSinkIds = function (sinkIds) {\n  if (!this._isSinkSupported) {\n    return Promise.reject(new NotSupportedError('Audio output selection is not supported by this browser'));\n  }\n  this.sinkIds = new Set(sinkIds.forEach ? sinkIds : [sinkIds]);\n  return this.version ? this._updateAudioOutputs() : Promise.resolve();\n};\n\n/**\n * Start timeout for ICE Gathering\n */\nPeerConnection.prototype._startIceGatheringTimeout = function startIceGatheringTimeout() {\n  var _this3 = this;\n  this._stopIceGatheringTimeout();\n  this._iceGatheringTimeoutId = setTimeout(function () {\n    _this3._onIceGatheringFailure(ICE_GATHERING_FAIL_TIMEOUT);\n  }, ICE_GATHERING_TIMEOUT);\n};\n\n/**\n * Stop timeout for ICE Gathering\n */\nPeerConnection.prototype._stopIceGatheringTimeout = function stopIceGatheringTimeout() {\n  clearInterval(this._iceGatheringTimeoutId);\n};\nPeerConnection.prototype._updateAudioOutputs = function updateAudioOutputs() {\n  var addedOutputIds = Array.from(this.sinkIds).filter(function (id) {\n    return !this.outputs.has(id);\n  }, this);\n  var removedOutputIds = Array.from(this.outputs.keys()).filter(function (id) {\n    return !this.sinkIds.has(id);\n  }, this);\n  var self = this;\n  var createOutputPromises = addedOutputIds.map(this._createAudioOutput, this);\n  return Promise.all(createOutputPromises).then(function () {\n    return Promise.all(removedOutputIds.map(self._removeAudioOutput, self));\n  });\n};\nPeerConnection.prototype._createAudio = function createAudio(arr) {\n  var audio = new Audio(arr);\n  this.onaudio(audio);\n  return audio;\n};\nPeerConnection.prototype._createAudioOutput = function createAudioOutput(id) {\n  var dest = null;\n  if (this._mediaStreamSource) {\n    dest = this._audioContext.createMediaStreamDestination();\n    this._mediaStreamSource.connect(dest);\n  }\n  var audio = this._createAudio();\n  setAudioSource(audio, dest && dest.stream ? dest.stream : this.pcStream);\n  var self = this;\n  return audio.setSinkId(id).then(function () {\n    return audio.play();\n  }).then(function () {\n    self.outputs.set(id, {\n      audio: audio,\n      dest: dest\n    });\n  });\n};\nPeerConnection.prototype._removeAudioOutputs = function removeAudioOutputs() {\n  if (this._masterAudio && typeof this._masterAudioDeviceId !== 'undefined') {\n    this._disableOutput(this, this._masterAudioDeviceId);\n    this.outputs.delete(this._masterAudioDeviceId);\n    this._masterAudioDeviceId = null;\n\n    // Release the audio resources before deleting the audio\n    if (!this._masterAudio.paused) {\n      this._masterAudio.pause();\n    }\n    if (typeof this._masterAudio.srcObject !== 'undefined') {\n      this._masterAudio.srcObject = null;\n    } else {\n      this._masterAudio.src = '';\n    }\n    this._masterAudio = null;\n  }\n  return Array.from(this.outputs.keys()).map(this._removeAudioOutput, this);\n};\nPeerConnection.prototype._disableOutput = function disableOutput(pc, id) {\n  var output = pc.outputs.get(id);\n  if (!output) {\n    return;\n  }\n  if (output.audio) {\n    output.audio.pause();\n    output.audio.src = '';\n  }\n  if (output.dest) {\n    output.dest.disconnect();\n  }\n};\n\n/**\n * Disable a non-master output, and update the master output to assume its state. This\n *   is called when the device ID assigned to the master output has been removed from\n *   active devices. We can not simply remove the master audio output, so we must\n *   instead reassign it.\n * @private\n * @param {PeerConnection} pc\n * @param {string} masterId - The current device ID assigned to the master audio element.\n */\nPeerConnection.prototype._reassignMasterOutput = function reassignMasterOutput(pc, masterId) {\n  var masterOutput = pc.outputs.get(masterId);\n  pc.outputs.delete(masterId);\n  var self = this;\n  var idToReplace = Array.from(pc.outputs.keys())[0] || 'default';\n  return masterOutput.audio.setSinkId(idToReplace).then(function () {\n    self._disableOutput(pc, idToReplace);\n    pc.outputs.set(idToReplace, masterOutput);\n    pc._masterAudioDeviceId = idToReplace;\n  }).catch(function rollback() {\n    pc.outputs.set(masterId, masterOutput);\n    self._log.info('Could not reassign master output. Attempted to roll back.');\n  });\n};\nPeerConnection.prototype._removeAudioOutput = function removeAudioOutput(id) {\n  if (this._masterAudioDeviceId === id) {\n    return this._reassignMasterOutput(this, id);\n  }\n  this._disableOutput(this, id);\n  this.outputs.delete(id);\n  return Promise.resolve();\n};\n\n/**\n * Use an AudioContext to potentially split our audio output stream to multiple\n *   audio devices. This is only available to browsers with AudioContext and\n *   HTMLAudioElement.setSinkId() available. We save the source stream in\n *   _masterAudio, and use it for one of the active audio devices. We keep\n *   track of its ID because we must replace it if we lose its initial device.\n */\nPeerConnection.prototype._onAddTrack = function onAddTrack(pc, stream) {\n  var audio = pc._masterAudio = this._createAudio();\n  setAudioSource(audio, stream);\n  audio.play();\n\n  // Assign the initial master audio element to a random active output device\n  var deviceId = Array.from(pc.outputs.keys())[0] || 'default';\n  pc._masterAudioDeviceId = deviceId;\n  pc.outputs.set(deviceId, {\n    audio: audio\n  });\n  try {\n    pc._mediaStreamSource = pc._audioContext.createMediaStreamSource(stream);\n  } catch (ex) {\n    this._log.warn('Unable to create a MediaStreamSource from onAddTrack', ex);\n    this._mediaStreamSource = null;\n  }\n  pc.pcStream = stream;\n  pc._updateAudioOutputs();\n};\n\n/**\n * Use a single audio element to play the audio output stream. This does not\n *   support multiple output devices, and is a fallback for when AudioContext\n *   and/or HTMLAudioElement.setSinkId() is not available to the client.\n */\nPeerConnection.prototype._fallbackOnAddTrack = function fallbackOnAddTrack(pc, stream) {\n  var audio = document && document.createElement('audio');\n  audio.autoplay = true;\n  if (!setAudioSource(audio, stream)) {\n    pc._log.info('Error attaching stream to element.');\n  }\n  pc.outputs.set('default', {\n    audio: audio\n  });\n};\nPeerConnection.prototype._setEncodingParameters = function (enableDscp) {\n  if (!enableDscp || !this._sender || typeof this._sender.getParameters !== 'function' || typeof this._sender.setParameters !== 'function') {\n    return;\n  }\n  var params = this._sender.getParameters();\n  if (!params.priority && !(params.encodings && params.encodings.length)) {\n    return;\n  }\n\n  // This is how MDN's RTPSenderParameters defines priority\n  params.priority = 'high';\n\n  // And this is how it's currently implemented in Chrome M72+\n  if (params.encodings && params.encodings.length) {\n    params.encodings.forEach(function (encoding) {\n      encoding.priority = 'high';\n      encoding.networkPriority = 'high';\n    });\n  }\n  this._sender.setParameters(params);\n};\nPeerConnection.prototype._setupPeerConnection = function (rtcConstraints, rtcConfiguration) {\n  var _this4 = this;\n  var self = this;\n  var version = new (this.options.rtcpcFactory || RTCPC)({\n    RTCPeerConnection: this.options.RTCPeerConnection\n  });\n  version.create(rtcConstraints, rtcConfiguration);\n  addStream(version.pc, this.stream);\n  var eventName = 'ontrack' in version.pc ? 'ontrack' : 'onaddstream';\n  version.pc[eventName] = function (event) {\n    var stream = self._remoteStream = event.stream || event.streams[0];\n    if (typeof version.pc.getSenders === 'function') {\n      _this4._sender = version.pc.getSenders()[0];\n    }\n    if (self._isSinkSupported) {\n      self._onAddTrack(self, stream);\n    } else {\n      self._fallbackOnAddTrack(self, stream);\n    }\n    self._startPollingVolume();\n  };\n  return version;\n};\nPeerConnection.prototype._maybeSetIceAggressiveNomination = function (sdp) {\n  return this.options.forceAggressiveIceNomination ? setIceAggressiveNomination(sdp) : sdp;\n};\nPeerConnection.prototype._setupChannel = function () {\n  var _this5 = this;\n  var pc = this.version.pc;\n\n  // Chrome 25 supports onopen\n  this.version.pc.onopen = function () {\n    _this5.status = 'open';\n    _this5.onopen();\n  };\n\n  // Chrome 26 doesn't support onopen so must detect state change\n  this.version.pc.onstatechange = function () {\n    if (_this5.version.pc && _this5.version.pc.readyState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n  };\n\n  // Chrome 27 changed onstatechange to onsignalingstatechange\n  this.version.pc.onsignalingstatechange = function () {\n    var state = pc.signalingState;\n    _this5._log.info('signalingState is \"' + state + '\"');\n    if (_this5.version.pc && _this5.version.pc.signalingState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n    _this5.onsignalingstatechange(pc.signalingState);\n  };\n\n  // Chrome 72+\n  pc.onconnectionstatechange = function (event) {\n    var state = pc.connectionState;\n    if (!state && event && event.target) {\n      // VDI environment\n      var targetPc = event.target;\n      state = targetPc.connectionState || targetPc.connectionState_;\n      _this5._log.info('pc.connectionState not detected. Using target PC. State=' + state);\n    }\n    if (!state) {\n      _this5._log.warn('onconnectionstatechange detected but state is \"' + state + '\"');\n    } else {\n      _this5._log.info('pc.connectionState is \"' + state + '\"');\n    }\n    _this5.onpcconnectionstatechange(state);\n    _this5._onMediaConnectionStateChange(state);\n  };\n  pc.onicecandidate = function (event) {\n    var candidate = event.candidate;\n    if (candidate) {\n      _this5._hasIceCandidates = true;\n      _this5.onicecandidate(candidate);\n      _this5._setupRTCIceTransportListener();\n    }\n    _this5._log.info('ICE Candidate: ' + JSON.stringify(candidate));\n  };\n  pc.onicegatheringstatechange = function () {\n    var state = pc.iceGatheringState;\n    if (state === 'gathering') {\n      _this5._startIceGatheringTimeout();\n    } else if (state === 'complete') {\n      _this5._stopIceGatheringTimeout();\n\n      // Fail if no candidates found\n      if (!_this5._hasIceCandidates) {\n        _this5._onIceGatheringFailure(ICE_GATHERING_FAIL_NONE);\n      }\n\n      // There was a failure mid-gathering phase. We want to start our timer and issue\n      // an ice restart if we don't get connected after our timeout\n      if (_this5._hasIceCandidates && _this5._hasIceGatheringFailures) {\n        _this5._startIceGatheringTimeout();\n      }\n    }\n    _this5._log.info('pc.iceGatheringState is \"' + pc.iceGatheringState + '\"');\n    _this5.onicegatheringstatechange(state);\n  };\n  pc.oniceconnectionstatechange = function () {\n    _this5._log.info('pc.iceConnectionState is \"' + pc.iceConnectionState + '\"');\n    _this5.oniceconnectionstatechange(pc.iceConnectionState);\n    _this5._onMediaConnectionStateChange(pc.iceConnectionState);\n  };\n};\nPeerConnection.prototype._initializeMediaStream = function (rtcConstraints, rtcConfiguration) {\n  // if mediastream already open then do nothing\n  if (this.status === 'open') {\n    return false;\n  }\n  if (this.pstream.status === 'disconnected') {\n    this.onerror({\n      info: {\n        code: 31000,\n        message: 'Cannot establish connection. Client is disconnected',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      }\n    });\n    this.close();\n    return false;\n  }\n  this.version = this._setupPeerConnection(rtcConstraints, rtcConfiguration);\n  this._setupChannel();\n  return true;\n};\n\n/**\n * Remove reconnection-related listeners\n * @private\n */\nPeerConnection.prototype._removeReconnectionListeners = function () {\n  if (this.pstream) {\n    this.pstream.removeListener('answer', this._onAnswerOrRinging);\n    this.pstream.removeListener('hangup', this._onHangup);\n  }\n};\n\n/**\n * Setup a listener for RTCDtlsTransport to capture state changes events\n * @private\n */\nPeerConnection.prototype._setupRTCDtlsTransportListener = function () {\n  var _this6 = this;\n  var dtlsTransport = this.getRTCDtlsTransport();\n  if (!dtlsTransport || dtlsTransport.onstatechange) {\n    return;\n  }\n  var handler = function handler() {\n    _this6._log.info('dtlsTransportState is \"' + dtlsTransport.state + '\"');\n    _this6.ondtlstransportstatechange(dtlsTransport.state);\n  };\n\n  // Publish initial state\n  handler();\n  dtlsTransport.onstatechange = handler;\n};\n\n/**\n * Setup a listener for RTCIceTransport to capture selected candidate pair changes\n * @private\n */\nPeerConnection.prototype._setupRTCIceTransportListener = function () {\n  var _this7 = this;\n  var iceTransport = this._getRTCIceTransport();\n  if (!iceTransport || iceTransport.onselectedcandidatepairchange) {\n    return;\n  }\n  iceTransport.onselectedcandidatepairchange = function () {\n    return _this7.onselectedcandidatepairchange(iceTransport.getSelectedCandidatePair());\n  };\n};\n\n/**\n * Restarts ICE for the current connection\n * ICE Restart failures are ignored. Retries are managed in Connection\n * @private\n */\nPeerConnection.prototype.iceRestart = function () {\n  var _this8 = this;\n  if (!this.options.enableIceRestart) {\n    return;\n  }\n  this._log.info('Attempting to restart ICE...');\n  this._hasIceCandidates = false;\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, {\n    iceRestart: true\n  }).then(function () {\n    _this8._removeReconnectionListeners();\n    _this8._onAnswerOrRinging = function (payload) {\n      _this8._removeReconnectionListeners();\n      if (!payload.sdp || _this8.version.pc.signalingState !== 'have-local-offer') {\n        var message = 'Invalid state or param during ICE Restart:' + ('hasSdp:' + !!payload.sdp + ', signalingState:' + _this8.version.pc.signalingState);\n        _this8._log.info(message);\n        return;\n      }\n      var sdp = _this8._maybeSetIceAggressiveNomination(payload.sdp);\n      _this8._answerSdp = sdp;\n      if (_this8.status !== 'closed') {\n        _this8.version.processAnswer(_this8.codecPreferences, sdp, null, function (err) {\n          var message = err && err.message ? err.message : err;\n          _this8._log.info('Failed to process answer during ICE Restart. Error: ' + message);\n        });\n      }\n    };\n    _this8._onHangup = function () {\n      _this8._log.info('Received hangup during ICE Restart');\n      _this8._removeReconnectionListeners();\n    };\n    _this8.pstream.on('answer', _this8._onAnswerOrRinging);\n    _this8.pstream.on('hangup', _this8._onHangup);\n    _this8.pstream.reinvite(_this8.version.getSDP(), _this8.callSid);\n  }).catch(function (err) {\n    var message = err && err.message ? err.message : err;\n    _this8._log.info('Failed to createOffer during ICE Restart. Error: ' + message);\n    // CreateOffer failures doesn't transition ice state to failed\n    // We need trigger it so it can be picked up by retries\n    _this8.onfailed(message);\n  });\n};\nPeerConnection.prototype.makeOutgoingCall = function (token, params, callsid, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  var _this9 = this;\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n  var self = this;\n  this.callSid = callsid;\n  function onAnswerSuccess() {\n    if (self.options) {\n      self._setEncodingParameters(self.options.dscp);\n    }\n    onMediaStarted(self.version.pc);\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({\n      info: {\n        code: 31000,\n        message: 'Error processing answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      }\n    });\n  }\n  this._onAnswerOrRinging = function (payload) {\n    if (!payload.sdp) {\n      return;\n    }\n    var sdp = _this9._maybeSetIceAggressiveNomination(payload.sdp);\n    self._answerSdp = sdp;\n    if (self.status !== 'closed') {\n      self.version.processAnswer(_this9.codecPreferences, sdp, onAnswerSuccess, onAnswerError);\n    }\n    self.pstream.removeListener('answer', self._onAnswerOrRinging);\n    self.pstream.removeListener('ringing', self._onAnswerOrRinging);\n  };\n  this.pstream.on('answer', this._onAnswerOrRinging);\n  this.pstream.on('ringing', this._onAnswerOrRinging);\n  function onOfferSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.invite(self.version.getSDP(), self.callSid, self.options.preflight, params);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n  function onOfferError(err) {\n    var errMsg = err.message || err;\n    self.onerror({\n      info: {\n        code: 31000,\n        message: 'Error creating the offer: ' + errMsg,\n        twilioError: new MediaErrors.ClientLocalDescFailed()\n      }\n    });\n  }\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, {\n    audio: true\n  }, onOfferSuccess, onOfferError);\n};\nPeerConnection.prototype.answerIncomingCall = function (callSid, sdp, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n  sdp = this._maybeSetIceAggressiveNomination(sdp);\n  this._answerSdp = sdp.replace(/^a=setup:actpass$/gm, 'a=setup:passive');\n  this.callSid = callSid;\n  var self = this;\n  function onAnswerSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.answer(self.version.getSDP(), callSid);\n      if (self.options) {\n        self._setEncodingParameters(self.options.dscp);\n      }\n      onMediaStarted(self.version.pc);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({\n      info: {\n        code: 31000,\n        message: 'Error creating the answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      }\n    });\n  }\n  this.version.processSDP(this.options.maxAverageBitrate, this.codecPreferences, sdp, {\n    audio: true\n  }, onAnswerSuccess, onAnswerError);\n};\nPeerConnection.prototype.close = function () {\n  if (this.version && this.version.pc) {\n    if (this.version.pc.signalingState !== 'closed') {\n      this.version.pc.close();\n    }\n    this.version.pc = null;\n  }\n  if (this.stream) {\n    this.mute(false);\n    this._stopStream(this.stream);\n  }\n  this.stream = null;\n  this._removeReconnectionListeners();\n  this._stopIceGatheringTimeout();\n  Promise.all(this._removeAudioOutputs()).catch(function () {\n    // We don't need to alert about failures here.\n  });\n  if (this._mediaStreamSource) {\n    this._mediaStreamSource.disconnect();\n  }\n  if (this._inputAnalyser) {\n    this._inputAnalyser.disconnect();\n  }\n  if (this._outputAnalyser) {\n    this._outputAnalyser.disconnect();\n  }\n  if (this._inputAnalyser2) {\n    this._inputAnalyser2.disconnect();\n  }\n  if (this._outputAnalyser2) {\n    this._outputAnalyser2.disconnect();\n  }\n  this.status = 'closed';\n  this.onclose();\n};\nPeerConnection.prototype.reject = function (callSid) {\n  this.callSid = callSid;\n};\nPeerConnection.prototype.ignore = function (callSid) {\n  this.callSid = callSid;\n};\n/**\n * Mute or unmute input audio. If the stream is not yet present, the setting\n *   is saved and applied to future streams/tracks.\n * @params {boolean} shouldMute - Whether the input audio should\n *   be muted or unmuted.\n */\nPeerConnection.prototype.mute = function (shouldMute) {\n  this.isMuted = shouldMute;\n  if (!this.stream) {\n    return;\n  }\n  if (this._sender && this._sender.track) {\n    this._sender.track.enabled = !shouldMute;\n  } else {\n    var audioTracks = typeof this.stream.getAudioTracks === 'function' ? this.stream.getAudioTracks() : this.stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.enabled = !shouldMute;\n    });\n  }\n};\n/**\n * Get or create an RTCDTMFSender for the first local audio MediaStreamTrack\n * we can get from the RTCPeerConnection. Return null if unsupported.\n * @instance\n * @returns ?RTCDTMFSender\n */\nPeerConnection.prototype.getOrCreateDTMFSender = function getOrCreateDTMFSender() {\n  if (this._dtmfSender || this._dtmfSenderUnsupported) {\n    return this._dtmfSender || null;\n  }\n  var self = this;\n  var pc = this.version.pc;\n  if (!pc) {\n    this._log.info('No RTCPeerConnection available to call createDTMFSender on');\n    return null;\n  }\n  if (typeof pc.getSenders === 'function' && (typeof RTCDTMFSender === 'function' || typeof RTCDtmfSender === 'function')) {\n    var chosenSender = pc.getSenders().find(function (sender) {\n      return sender.dtmf;\n    });\n    if (chosenSender) {\n      this._log.info('Using RTCRtpSender#dtmf');\n      this._dtmfSender = chosenSender.dtmf;\n      return this._dtmfSender;\n    }\n  }\n  if (typeof pc.createDTMFSender === 'function' && typeof pc.getLocalStreams === 'function') {\n    var track = pc.getLocalStreams().map(function (stream) {\n      var tracks = self._getAudioTracks(stream);\n      return tracks && tracks[0];\n    })[0];\n    if (!track) {\n      this._log.info('No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender');\n      return null;\n    }\n    this._log.info('Creating RTCDTMFSender');\n    this._dtmfSender = pc.createDTMFSender(track);\n    return this._dtmfSender;\n  }\n  this._log.info('RTCPeerConnection does not support RTCDTMFSender');\n  this._dtmfSenderUnsupported = true;\n  return null;\n};\n\n/**\n * Get the RTCDtlTransport object from the PeerConnection\n * @returns RTCDtlTransport\n */\nPeerConnection.prototype.getRTCDtlsTransport = function getRTCDtlsTransport() {\n  var sender = this.version && this.version.pc && typeof this.version.pc.getSenders === 'function' && this.version.pc.getSenders()[0];\n  return sender && sender.transport || null;\n};\nPeerConnection.prototype._canStopMediaStreamTrack = function () {\n  return typeof MediaStreamTrack.prototype.stop === 'function';\n};\nPeerConnection.prototype._getAudioTracks = function (stream) {\n  return typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n};\n\n/**\n * Get the RTCIceTransport object from the PeerConnection\n * @returns RTCIceTransport\n */\nPeerConnection.prototype._getRTCIceTransport = function _getRTCIceTransport() {\n  var dtlsTransport = this.getRTCDtlsTransport();\n  return dtlsTransport && dtlsTransport.iceTransport || null;\n};\n\n// Is PeerConnection.protocol used outside of our SDK? We should remove this if not.\nPeerConnection.protocol = function () {\n  return RTCPC.test() ? new RTCPC() : null;\n}();\nfunction addStream(pc, stream) {\n  if (typeof pc.addTrack === 'function') {\n    stream.getAudioTracks().forEach(function (track) {\n      // The second parameters, stream, should not be necessary per the latest editor's\n      //   draft, but FF requires it. https://bugzilla.mozilla.org/show_bug.cgi?id=1231414\n      pc.addTrack(track, stream);\n    });\n  } else {\n    pc.addStream(stream);\n  }\n}\nfunction cloneStream(oldStream) {\n  var newStream = typeof MediaStream !== 'undefined' ? new MediaStream()\n  // eslint-disable-next-line\n  : new webkitMediaStream();\n  oldStream.getAudioTracks().forEach(newStream.addTrack, newStream);\n  return newStream;\n}\nfunction removeStream(pc, stream) {\n  if (typeof pc.removeTrack === 'function') {\n    pc.getSenders().forEach(function (sender) {\n      pc.removeTrack(sender);\n    });\n  } else {\n    pc.removeStream(stream);\n  }\n}\n\n/**\n * Set the source of an HTMLAudioElement to the specified MediaStream\n * @param {HTMLAudioElement} audio\n * @param {MediaStream} stream\n * @returns {boolean} Whether the audio source was set successfully\n */\nfunction setAudioSource(audio, stream) {\n  if (typeof audio.srcObject !== 'undefined') {\n    audio.srcObject = stream;\n  } else if (typeof audio.mozSrcObject !== 'undefined') {\n    audio.mozSrcObject = stream;\n  } else if (typeof audio.src !== 'undefined') {\n    var _window = audio.options.window || window;\n    audio.src = (_window.URL || _window.webkitURL).createObjectURL(stream);\n  } else {\n    return false;\n  }\n  return true;\n}\nPeerConnection.enabled = RTCPC.test();\nmodule.exports = PeerConnection;","map":{"version":3,"names":["_require","require","InvalidArgumentError","MediaErrors","NotSupportedError","SignalingErrors","Log","default","util","RTCPC","_require2","setIceAggressiveNomination","ICE_GATHERING_TIMEOUT","ICE_GATHERING_FAIL_NONE","ICE_GATHERING_FAIL_TIMEOUT","INITIAL_ICE_CONNECTION_STATE","VOLUME_INTERVAL_MS","PeerConnection","audioHelper","pstream","getUserMedia","options","noop","onaudio","onopen","onerror","onclose","ondisconnected","onfailed","onconnected","onreconnected","onsignalingstatechange","ondtlstransportstatechange","onicegatheringfailure","onicegatheringstatechange","oniceconnectionstatechange","onpcconnectionstatechange","onicecandidate","onselectedcandidatepairchange","onvolume","version","stream","sinkIds","Set","outputs","Map","status","callSid","isMuted","AudioContext","window","webkitAudioContext","_isSinkSupported","HTMLAudioElement","prototype","setSinkId","_audioContext","_hasIceCandidates","_hasIceGatheringFailures","_iceGatheringTimeoutId","_masterAudio","_masterAudioDeviceId","_mediaStreamSource","_dtmfSender","_dtmfSenderUnsupported","_callEvents","_nextTimeToPublish","Date","now","_onAnswerOrRinging","_onHangup","_remoteStream","_shouldManageStream","_iceState","_isUnifiedPlan","isUnifiedPlan","navigator","codecPreferences","_log","getInstance","uri","_uri","openWithConstraints","constraints","audio","then","_setInputTracksFromStream","bind","setInputTracksFromStream","self","_createAnalyser","audioContext","Object","assign","fftSize","smoothingTimeConstant","analyser","createAnalyser","field","_setVolumeHandler","handler","_startPollingVolume","inputAnalyser","_inputAnalyser","inputBufferLength","frequencyBinCount","inputDataArray","Uint8Array","_inputAnalyser2","minDecibels","maxDecibels","outputAnalyser","_outputAnalyser","outputBufferLength","outputDataArray","_outputAnalyser2","_updateInputStreamSource","_updateOutputStreamSource","setTimeout","emitVolume","disconnect","getByteFrequencyData","inputVolume","average","inputVolume2","outputVolume","outputVolume2","_stopStream","MediaStreamTrack","stop","audioTracks","getAudioTracks","forEach","track","_inputStreamSource","createMediaStreamSource","connect","ex","warn","_outputStreamSource","shouldClone","newStream","_setInputTracksForUnifiedPlan","_setInputTracksForPlanB","_this","Promise","reject","length","localStream","cloneStream","removeStream","pc","removeTrack","addTrack","addStream","mute","resolve","createOffer","maxAverageBitrate","processAnswer","_answerSdp","_this2","getStreamPromise","_sender","getSenders","replaceTrack","_onInputDevicesChanged","activeInputWasLost","every","readyState","_onIceGatheringFailure","type","_onMediaConnectionStateChange","newState","previousState","message","info","_stopIceGatheringTimeout","_setSinkIds","_updateAudioOutputs","_startIceGatheringTimeout","startIceGatheringTimeout","_this3","stopIceGatheringTimeout","clearInterval","updateAudioOutputs","addedOutputIds","Array","from","filter","id","has","removedOutputIds","keys","createOutputPromises","map","_createAudioOutput","all","_removeAudioOutput","_createAudio","createAudio","arr","Audio","createAudioOutput","dest","createMediaStreamDestination","setAudioSource","pcStream","play","set","_removeAudioOutputs","removeAudioOutputs","_disableOutput","delete","paused","pause","srcObject","src","disableOutput","output","get","_reassignMasterOutput","reassignMasterOutput","masterId","masterOutput","idToReplace","catch","rollback","removeAudioOutput","_onAddTrack","onAddTrack","deviceId","_fallbackOnAddTrack","fallbackOnAddTrack","document","createElement","autoplay","_setEncodingParameters","enableDscp","getParameters","setParameters","params","priority","encodings","encoding","networkPriority","_setupPeerConnection","rtcConstraints","rtcConfiguration","_this4","rtcpcFactory","RTCPeerConnection","create","eventName","event","streams","_maybeSetIceAggressiveNomination","sdp","forceAggressiveIceNomination","_setupChannel","_this5","onstatechange","state","signalingState","onconnectionstatechange","connectionState","target","targetPc","connectionState_","candidate","_setupRTCIceTransportListener","JSON","stringify","iceGatheringState","iceConnectionState","_initializeMediaStream","code","twilioError","ConnectionDisconnected","close","_removeReconnectionListeners","removeListener","_setupRTCDtlsTransportListener","_this6","dtlsTransport","getRTCDtlsTransport","_this7","iceTransport","_getRTCIceTransport","getSelectedCandidatePair","iceRestart","_this8","enableIceRestart","payload","err","on","reinvite","getSDP","makeOutgoingCall","token","callsid","onMediaStarted","_this9","onAnswerSuccess","dscp","onAnswerError","errMsg","ClientRemoteDescFailed","onOfferSuccess","invite","preflight","onOfferError","ClientLocalDescFailed","answerIncomingCall","replace","answer","processSDP","ignore","shouldMute","enabled","getOrCreateDTMFSender","RTCDTMFSender","RTCDtmfSender","chosenSender","find","sender","dtmf","createDTMFSender","getLocalStreams","tracks","_getAudioTracks","transport","_canStopMediaStreamTrack","protocol","test","oldStream","MediaStream","webkitMediaStream","mozSrcObject","_window","URL","webkitURL","createObjectURL","module","exports"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/twilio-client/es5/twilio/rtc/peerconnection.js"],"sourcesContent":["'use strict';\n\nvar _require = require('../errors'),\n    InvalidArgumentError = _require.InvalidArgumentError,\n    MediaErrors = _require.MediaErrors,\n    NotSupportedError = _require.NotSupportedError,\n    SignalingErrors = _require.SignalingErrors;\n\nvar Log = require('../log').default;\nvar util = require('../util');\nvar RTCPC = require('./rtcpc');\n\nvar _require2 = require('./sdp'),\n    setIceAggressiveNomination = _require2.setIceAggressiveNomination;\n\nvar ICE_GATHERING_TIMEOUT = 15000;\nvar ICE_GATHERING_FAIL_NONE = 'none';\nvar ICE_GATHERING_FAIL_TIMEOUT = 'timeout';\nvar INITIAL_ICE_CONNECTION_STATE = 'new';\nvar VOLUME_INTERVAL_MS = 50;\n\n/**\n * @typedef {Object} PeerConnection\n * @param audioHelper\n * @param pstream\n * @param options\n * @return {PeerConnection}\n * @constructor\n */\nfunction PeerConnection(audioHelper, pstream, getUserMedia, options) {\n  if (!audioHelper || !pstream || !getUserMedia) {\n    throw new InvalidArgumentError('Audiohelper, pstream and getUserMedia are required arguments');\n  }\n\n  if (!(this instanceof PeerConnection)) {\n    return new PeerConnection(audioHelper, pstream, getUserMedia, options);\n  }\n\n  function noop() {}\n  this.onaudio = noop;\n  this.onopen = noop;\n  this.onerror = noop;\n  this.onclose = noop;\n  this.ondisconnected = noop;\n  this.onfailed = noop;\n  this.onconnected = noop;\n  this.onreconnected = noop;\n  this.onsignalingstatechange = noop;\n  this.ondtlstransportstatechange = noop;\n  this.onicegatheringfailure = noop;\n  this.onicegatheringstatechange = noop;\n  this.oniceconnectionstatechange = noop;\n  this.onpcconnectionstatechange = noop;\n  this.onicecandidate = noop;\n  this.onselectedcandidatepairchange = noop;\n  this.onvolume = noop;\n  this.version = null;\n  this.pstream = pstream;\n  this.stream = null;\n  this.sinkIds = new Set(['default']);\n  this.outputs = new Map();\n  this.status = 'connecting';\n  this.callSid = null;\n  this.isMuted = false;\n  this.getUserMedia = getUserMedia;\n\n  var AudioContext = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  this._isSinkSupported = !!AudioContext && typeof HTMLAudioElement !== 'undefined' && HTMLAudioElement.prototype.setSinkId;\n  // NOTE(mmalavalli): Since each Connection creates its own AudioContext,\n  // after 6 instances an exception is thrown. Refer https://www.w3.org/2011/audio/track/issues/3.\n  // In order to get around it, we are re-using the Device's AudioContext.\n  this._audioContext = AudioContext && audioHelper._audioContext;\n  this._hasIceCandidates = false;\n  this._hasIceGatheringFailures = false;\n  this._iceGatheringTimeoutId = null;\n  this._masterAudio = null;\n  this._masterAudioDeviceId = null;\n  this._mediaStreamSource = null;\n  this._dtmfSender = null;\n  this._dtmfSenderUnsupported = false;\n  this._callEvents = [];\n  this._nextTimeToPublish = Date.now();\n  this._onAnswerOrRinging = noop;\n  this._onHangup = noop;\n  this._remoteStream = null;\n  this._shouldManageStream = true;\n  this._iceState = INITIAL_ICE_CONNECTION_STATE;\n  this._isUnifiedPlan = options.isUnifiedPlan;\n\n  this.options = options = options || {};\n  this.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  this.util = options.util || util;\n  this.codecPreferences = options.codecPreferences;\n\n  this._log = Log.getInstance();\n\n  return this;\n}\n\nPeerConnection.prototype.uri = function () {\n  return this._uri;\n};\n\n/**\n * Open the underlying RTCPeerConnection with a MediaStream obtained by\n *   passed constraints. The resulting MediaStream is created internally\n *   and will therefore be managed and destroyed internally.\n * @param {MediaStreamConstraints} constraints\n */\nPeerConnection.prototype.openWithConstraints = function (constraints) {\n  return this.getUserMedia({ audio: constraints }).then(this._setInputTracksFromStream.bind(this, false));\n};\n\n/**\n * Replace the existing input audio tracks with the audio tracks from the\n *   passed input audio stream. We re-use the existing stream because\n *   the AnalyzerNode is bound to the stream.\n * @param {MediaStream} stream\n */\nPeerConnection.prototype.setInputTracksFromStream = function (stream) {\n  var self = this;\n  return this._setInputTracksFromStream(true, stream).then(function () {\n    self._shouldManageStream = false;\n  });\n};\n\nPeerConnection.prototype._createAnalyser = function (audioContext, options) {\n  options = Object.assign({\n    fftSize: 32,\n    smoothingTimeConstant: 0.3\n  }, options);\n\n  var analyser = audioContext.createAnalyser();\n  for (var field in options) {\n    analyser[field] = options[field];\n  }\n\n  return analyser;\n};\n\nPeerConnection.prototype._setVolumeHandler = function (handler) {\n  this.onvolume = handler;\n};\nPeerConnection.prototype._startPollingVolume = function () {\n  if (!this._audioContext || !this.stream || !this._remoteStream) {\n    return;\n  }\n\n  var audioContext = this._audioContext;\n\n  var inputAnalyser = this._inputAnalyser = this._createAnalyser(audioContext);\n  var inputBufferLength = inputAnalyser.frequencyBinCount;\n  var inputDataArray = new Uint8Array(inputBufferLength);\n  this._inputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  var outputAnalyser = this._outputAnalyser = this._createAnalyser(audioContext);\n  var outputBufferLength = outputAnalyser.frequencyBinCount;\n  var outputDataArray = new Uint8Array(outputBufferLength);\n  this._outputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  this._updateInputStreamSource(this.stream);\n  this._updateOutputStreamSource(this._remoteStream);\n\n  var self = this;\n  setTimeout(function emitVolume() {\n    if (!self._audioContext) {\n      return;\n    } else if (self.status === 'closed') {\n      self._inputAnalyser.disconnect();\n      self._outputAnalyser.disconnect();\n      self._inputAnalyser2.disconnect();\n      self._outputAnalyser2.disconnect();\n      return;\n    }\n\n    self._inputAnalyser.getByteFrequencyData(inputDataArray);\n    var inputVolume = self.util.average(inputDataArray);\n\n    self._inputAnalyser2.getByteFrequencyData(inputDataArray);\n    var inputVolume2 = self.util.average(inputDataArray);\n\n    self._outputAnalyser.getByteFrequencyData(outputDataArray);\n    var outputVolume = self.util.average(outputDataArray);\n\n    self._outputAnalyser2.getByteFrequencyData(outputDataArray);\n    var outputVolume2 = self.util.average(outputDataArray);\n    self.onvolume(inputVolume / 255, outputVolume / 255, inputVolume2, outputVolume2);\n\n    setTimeout(emitVolume, VOLUME_INTERVAL_MS);\n  }, VOLUME_INTERVAL_MS);\n};\n\nPeerConnection.prototype._stopStream = function _stopStream(stream) {\n  // We shouldn't stop the tracks if they were not created inside\n  //   this PeerConnection.\n  if (!this._shouldManageStream) {\n    return;\n  }\n\n  if (typeof MediaStreamTrack.prototype.stop === 'function') {\n    var audioTracks = typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.stop();\n    });\n  }\n  // NOTE(mroberts): This is just a fallback to any ancient browsers that may\n  // not implement MediaStreamTrack.stop.\n  else {\n      stream.stop();\n    }\n};\n\n/**\n * Update the stream source with the new input audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateInputStreamSource = function (stream) {\n  if (this._inputStreamSource) {\n    this._inputStreamSource.disconnect();\n  }\n\n  try {\n    this._inputStreamSource = this._audioContext.createMediaStreamSource(stream);\n    this._inputStreamSource.connect(this._inputAnalyser);\n    this._inputStreamSource.connect(this._inputAnalyser2);\n  } catch (ex) {\n    this._log.warn('Unable to update input MediaStreamSource', ex);\n    this._inputStreamSource = null;\n  }\n};\n\n/**\n * Update the stream source with the new ouput audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateOutputStreamSource = function (stream) {\n  if (this._outputStreamSource) {\n    this._outputStreamSource.disconnect();\n  }\n\n  try {\n    this._outputStreamSource = this._audioContext.createMediaStreamSource(stream);\n    this._outputStreamSource.connect(this._outputAnalyser);\n    this._outputStreamSource.connect(this._outputAnalyser2);\n  } catch (ex) {\n    this._log.warn('Unable to update output MediaStreamSource', ex);\n    this._outputStreamSource = null;\n  }\n};\n\n/**\n * Replace the tracks of the current stream with new tracks. We do this rather than replacing the\n *   whole stream because AnalyzerNodes are bound to a stream.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksFromStream = function (shouldClone, newStream) {\n  return this._isUnifiedPlan ? this._setInputTracksForUnifiedPlan(shouldClone, newStream) : this._setInputTracksForPlanB(shouldClone, newStream);\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'plan-b' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForPlanB = function (shouldClone, newStream) {\n  var _this = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    this._stopStream(localStream);\n\n    removeStream(this.version.pc, localStream);\n    localStream.getAudioTracks().forEach(localStream.removeTrack, localStream);\n    newStream.getAudioTracks().forEach(localStream.addTrack, localStream);\n    addStream(this.version.pc, newStream);\n\n    this._updateInputStreamSource(this.stream);\n  }\n\n  // Apply mute settings to new input track\n  this.mute(this.isMuted);\n\n  if (!this.version) {\n    return Promise.resolve(this.stream);\n  }\n\n  return new Promise(function (resolve, reject) {\n    _this.version.createOffer(_this.options.maxAverageBitrate, _this.codecPreferences, { audio: true }, function () {\n      _this.version.processAnswer(_this.codecPreferences, _this._answerSdp, function () {\n        resolve(_this.stream);\n      }, reject);\n    }, reject);\n  });\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'unified-plan' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForUnifiedPlan = function (shouldClone, newStream) {\n  var _this2 = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n  var getStreamPromise = function getStreamPromise() {\n    // Apply mute settings to new input track\n    _this2.mute(_this2.isMuted);\n    return Promise.resolve(_this2.stream);\n  };\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    // If the call was started with gUM, and we are now replacing that track with an\n    // external stream's tracks, we should stop the old managed track.\n    if (this._shouldManageStream) {\n      this._stopStream(localStream);\n    }\n\n    if (!this._sender) {\n      this._sender = this.version.pc.getSenders()[0];\n    }\n\n    return this._sender.replaceTrack(newStream.getAudioTracks()[0]).then(function () {\n      _this2._updateInputStreamSource(newStream);\n      return getStreamPromise();\n    });\n  }\n\n  return getStreamPromise();\n};\n\nPeerConnection.prototype._onInputDevicesChanged = function () {\n  if (!this.stream) {\n    return;\n  }\n\n  // If all of our active tracks are ended, then our active input was lost\n  var activeInputWasLost = this.stream.getAudioTracks().every(function (track) {\n    return track.readyState === 'ended';\n  });\n\n  // We only want to act if we manage the stream in PeerConnection (It was created\n  // here, rather than passed in.)\n  if (activeInputWasLost && this._shouldManageStream) {\n    this.openWithConstraints(true);\n  }\n};\n\nPeerConnection.prototype._onIceGatheringFailure = function (type) {\n  this._hasIceGatheringFailures = true;\n  this.onicegatheringfailure(type);\n};\n\nPeerConnection.prototype._onMediaConnectionStateChange = function (newState) {\n  var previousState = this._iceState;\n\n  if (previousState === newState || newState !== 'connected' && newState !== 'disconnected' && newState !== 'failed') {\n    return;\n  }\n  this._iceState = newState;\n\n  var message = void 0;\n  switch (newState) {\n    case 'connected':\n      if (previousState === 'disconnected' || previousState === 'failed') {\n        message = 'ICE liveliness check succeeded. Connection with Twilio restored';\n        this._log.info(message);\n        this.onreconnected(message);\n      } else {\n        message = 'Media connection established.';\n        this._log.info(message);\n        this.onconnected(message);\n      }\n      this._stopIceGatheringTimeout();\n      this._hasIceGatheringFailures = false;\n      break;\n    case 'disconnected':\n      message = 'ICE liveliness check failed. May be having trouble connecting to Twilio';\n      this._log.info(message);\n      this.ondisconnected(message);\n      break;\n    case 'failed':\n      message = 'Connection with Twilio was interrupted.';\n      this._log.info(message);\n      this.onfailed(message);\n      break;\n  }\n};\n\nPeerConnection.prototype._setSinkIds = function (sinkIds) {\n  if (!this._isSinkSupported) {\n    return Promise.reject(new NotSupportedError('Audio output selection is not supported by this browser'));\n  }\n\n  this.sinkIds = new Set(sinkIds.forEach ? sinkIds : [sinkIds]);\n  return this.version ? this._updateAudioOutputs() : Promise.resolve();\n};\n\n/**\n * Start timeout for ICE Gathering\n */\nPeerConnection.prototype._startIceGatheringTimeout = function startIceGatheringTimeout() {\n  var _this3 = this;\n\n  this._stopIceGatheringTimeout();\n  this._iceGatheringTimeoutId = setTimeout(function () {\n    _this3._onIceGatheringFailure(ICE_GATHERING_FAIL_TIMEOUT);\n  }, ICE_GATHERING_TIMEOUT);\n};\n\n/**\n * Stop timeout for ICE Gathering\n */\nPeerConnection.prototype._stopIceGatheringTimeout = function stopIceGatheringTimeout() {\n  clearInterval(this._iceGatheringTimeoutId);\n};\n\nPeerConnection.prototype._updateAudioOutputs = function updateAudioOutputs() {\n  var addedOutputIds = Array.from(this.sinkIds).filter(function (id) {\n    return !this.outputs.has(id);\n  }, this);\n\n  var removedOutputIds = Array.from(this.outputs.keys()).filter(function (id) {\n    return !this.sinkIds.has(id);\n  }, this);\n\n  var self = this;\n  var createOutputPromises = addedOutputIds.map(this._createAudioOutput, this);\n  return Promise.all(createOutputPromises).then(function () {\n    return Promise.all(removedOutputIds.map(self._removeAudioOutput, self));\n  });\n};\n\nPeerConnection.prototype._createAudio = function createAudio(arr) {\n  var audio = new Audio(arr);\n  this.onaudio(audio);\n  return audio;\n};\n\nPeerConnection.prototype._createAudioOutput = function createAudioOutput(id) {\n  var dest = null;\n  if (this._mediaStreamSource) {\n    dest = this._audioContext.createMediaStreamDestination();\n    this._mediaStreamSource.connect(dest);\n  }\n\n  var audio = this._createAudio();\n  setAudioSource(audio, dest && dest.stream ? dest.stream : this.pcStream);\n\n  var self = this;\n  return audio.setSinkId(id).then(function () {\n    return audio.play();\n  }).then(function () {\n    self.outputs.set(id, {\n      audio: audio,\n      dest: dest\n    });\n  });\n};\n\nPeerConnection.prototype._removeAudioOutputs = function removeAudioOutputs() {\n  if (this._masterAudio && typeof this._masterAudioDeviceId !== 'undefined') {\n    this._disableOutput(this, this._masterAudioDeviceId);\n    this.outputs.delete(this._masterAudioDeviceId);\n    this._masterAudioDeviceId = null;\n\n    // Release the audio resources before deleting the audio\n    if (!this._masterAudio.paused) {\n      this._masterAudio.pause();\n    }\n    if (typeof this._masterAudio.srcObject !== 'undefined') {\n      this._masterAudio.srcObject = null;\n    } else {\n      this._masterAudio.src = '';\n    }\n    this._masterAudio = null;\n  }\n\n  return Array.from(this.outputs.keys()).map(this._removeAudioOutput, this);\n};\n\nPeerConnection.prototype._disableOutput = function disableOutput(pc, id) {\n  var output = pc.outputs.get(id);\n  if (!output) {\n    return;\n  }\n\n  if (output.audio) {\n    output.audio.pause();\n    output.audio.src = '';\n  }\n\n  if (output.dest) {\n    output.dest.disconnect();\n  }\n};\n\n/**\n * Disable a non-master output, and update the master output to assume its state. This\n *   is called when the device ID assigned to the master output has been removed from\n *   active devices. We can not simply remove the master audio output, so we must\n *   instead reassign it.\n * @private\n * @param {PeerConnection} pc\n * @param {string} masterId - The current device ID assigned to the master audio element.\n */\nPeerConnection.prototype._reassignMasterOutput = function reassignMasterOutput(pc, masterId) {\n  var masterOutput = pc.outputs.get(masterId);\n  pc.outputs.delete(masterId);\n\n  var self = this;\n  var idToReplace = Array.from(pc.outputs.keys())[0] || 'default';\n  return masterOutput.audio.setSinkId(idToReplace).then(function () {\n    self._disableOutput(pc, idToReplace);\n\n    pc.outputs.set(idToReplace, masterOutput);\n    pc._masterAudioDeviceId = idToReplace;\n  }).catch(function rollback() {\n    pc.outputs.set(masterId, masterOutput);\n    self._log.info('Could not reassign master output. Attempted to roll back.');\n  });\n};\n\nPeerConnection.prototype._removeAudioOutput = function removeAudioOutput(id) {\n  if (this._masterAudioDeviceId === id) {\n    return this._reassignMasterOutput(this, id);\n  }\n\n  this._disableOutput(this, id);\n  this.outputs.delete(id);\n\n  return Promise.resolve();\n};\n\n/**\n * Use an AudioContext to potentially split our audio output stream to multiple\n *   audio devices. This is only available to browsers with AudioContext and\n *   HTMLAudioElement.setSinkId() available. We save the source stream in\n *   _masterAudio, and use it for one of the active audio devices. We keep\n *   track of its ID because we must replace it if we lose its initial device.\n */\nPeerConnection.prototype._onAddTrack = function onAddTrack(pc, stream) {\n  var audio = pc._masterAudio = this._createAudio();\n  setAudioSource(audio, stream);\n  audio.play();\n\n  // Assign the initial master audio element to a random active output device\n  var deviceId = Array.from(pc.outputs.keys())[0] || 'default';\n  pc._masterAudioDeviceId = deviceId;\n  pc.outputs.set(deviceId, {\n    audio: audio\n  });\n\n  try {\n    pc._mediaStreamSource = pc._audioContext.createMediaStreamSource(stream);\n  } catch (ex) {\n    this._log.warn('Unable to create a MediaStreamSource from onAddTrack', ex);\n    this._mediaStreamSource = null;\n  }\n\n  pc.pcStream = stream;\n  pc._updateAudioOutputs();\n};\n\n/**\n * Use a single audio element to play the audio output stream. This does not\n *   support multiple output devices, and is a fallback for when AudioContext\n *   and/or HTMLAudioElement.setSinkId() is not available to the client.\n */\nPeerConnection.prototype._fallbackOnAddTrack = function fallbackOnAddTrack(pc, stream) {\n  var audio = document && document.createElement('audio');\n  audio.autoplay = true;\n\n  if (!setAudioSource(audio, stream)) {\n    pc._log.info('Error attaching stream to element.');\n  }\n\n  pc.outputs.set('default', {\n    audio: audio\n  });\n};\n\nPeerConnection.prototype._setEncodingParameters = function (enableDscp) {\n  if (!enableDscp || !this._sender || typeof this._sender.getParameters !== 'function' || typeof this._sender.setParameters !== 'function') {\n    return;\n  }\n\n  var params = this._sender.getParameters();\n  if (!params.priority && !(params.encodings && params.encodings.length)) {\n    return;\n  }\n\n  // This is how MDN's RTPSenderParameters defines priority\n  params.priority = 'high';\n\n  // And this is how it's currently implemented in Chrome M72+\n  if (params.encodings && params.encodings.length) {\n    params.encodings.forEach(function (encoding) {\n      encoding.priority = 'high';\n      encoding.networkPriority = 'high';\n    });\n  }\n\n  this._sender.setParameters(params);\n};\n\nPeerConnection.prototype._setupPeerConnection = function (rtcConstraints, rtcConfiguration) {\n  var _this4 = this;\n\n  var self = this;\n  var version = new (this.options.rtcpcFactory || RTCPC)({ RTCPeerConnection: this.options.RTCPeerConnection });\n  version.create(rtcConstraints, rtcConfiguration);\n  addStream(version.pc, this.stream);\n\n  var eventName = 'ontrack' in version.pc ? 'ontrack' : 'onaddstream';\n\n  version.pc[eventName] = function (event) {\n    var stream = self._remoteStream = event.stream || event.streams[0];\n\n    if (typeof version.pc.getSenders === 'function') {\n      _this4._sender = version.pc.getSenders()[0];\n    }\n\n    if (self._isSinkSupported) {\n      self._onAddTrack(self, stream);\n    } else {\n      self._fallbackOnAddTrack(self, stream);\n    }\n\n    self._startPollingVolume();\n  };\n  return version;\n};\n\nPeerConnection.prototype._maybeSetIceAggressiveNomination = function (sdp) {\n  return this.options.forceAggressiveIceNomination ? setIceAggressiveNomination(sdp) : sdp;\n};\n\nPeerConnection.prototype._setupChannel = function () {\n  var _this5 = this;\n\n  var pc = this.version.pc;\n\n  // Chrome 25 supports onopen\n  this.version.pc.onopen = function () {\n    _this5.status = 'open';\n    _this5.onopen();\n  };\n\n  // Chrome 26 doesn't support onopen so must detect state change\n  this.version.pc.onstatechange = function () {\n    if (_this5.version.pc && _this5.version.pc.readyState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n  };\n\n  // Chrome 27 changed onstatechange to onsignalingstatechange\n  this.version.pc.onsignalingstatechange = function () {\n    var state = pc.signalingState;\n    _this5._log.info('signalingState is \"' + state + '\"');\n\n    if (_this5.version.pc && _this5.version.pc.signalingState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n\n    _this5.onsignalingstatechange(pc.signalingState);\n  };\n\n  // Chrome 72+\n  pc.onconnectionstatechange = function (event) {\n    var state = pc.connectionState;\n    if (!state && event && event.target) {\n      // VDI environment\n      var targetPc = event.target;\n      state = targetPc.connectionState || targetPc.connectionState_;\n      _this5._log.info('pc.connectionState not detected. Using target PC. State=' + state);\n    }\n    if (!state) {\n      _this5._log.warn('onconnectionstatechange detected but state is \"' + state + '\"');\n    } else {\n      _this5._log.info('pc.connectionState is \"' + state + '\"');\n    }\n    _this5.onpcconnectionstatechange(state);\n    _this5._onMediaConnectionStateChange(state);\n  };\n\n  pc.onicecandidate = function (event) {\n    var candidate = event.candidate;\n\n    if (candidate) {\n      _this5._hasIceCandidates = true;\n      _this5.onicecandidate(candidate);\n      _this5._setupRTCIceTransportListener();\n    }\n\n    _this5._log.info('ICE Candidate: ' + JSON.stringify(candidate));\n  };\n\n  pc.onicegatheringstatechange = function () {\n    var state = pc.iceGatheringState;\n    if (state === 'gathering') {\n      _this5._startIceGatheringTimeout();\n    } else if (state === 'complete') {\n      _this5._stopIceGatheringTimeout();\n\n      // Fail if no candidates found\n      if (!_this5._hasIceCandidates) {\n        _this5._onIceGatheringFailure(ICE_GATHERING_FAIL_NONE);\n      }\n\n      // There was a failure mid-gathering phase. We want to start our timer and issue\n      // an ice restart if we don't get connected after our timeout\n      if (_this5._hasIceCandidates && _this5._hasIceGatheringFailures) {\n        _this5._startIceGatheringTimeout();\n      }\n    }\n\n    _this5._log.info('pc.iceGatheringState is \"' + pc.iceGatheringState + '\"');\n    _this5.onicegatheringstatechange(state);\n  };\n\n  pc.oniceconnectionstatechange = function () {\n    _this5._log.info('pc.iceConnectionState is \"' + pc.iceConnectionState + '\"');\n    _this5.oniceconnectionstatechange(pc.iceConnectionState);\n    _this5._onMediaConnectionStateChange(pc.iceConnectionState);\n  };\n};\nPeerConnection.prototype._initializeMediaStream = function (rtcConstraints, rtcConfiguration) {\n  // if mediastream already open then do nothing\n  if (this.status === 'open') {\n    return false;\n  }\n  if (this.pstream.status === 'disconnected') {\n    this.onerror({ info: {\n        code: 31000,\n        message: 'Cannot establish connection. Client is disconnected',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    this.close();\n    return false;\n  }\n  this.version = this._setupPeerConnection(rtcConstraints, rtcConfiguration);\n  this._setupChannel();\n  return true;\n};\n\n/**\n * Remove reconnection-related listeners\n * @private\n */\nPeerConnection.prototype._removeReconnectionListeners = function () {\n  if (this.pstream) {\n    this.pstream.removeListener('answer', this._onAnswerOrRinging);\n    this.pstream.removeListener('hangup', this._onHangup);\n  }\n};\n\n/**\n * Setup a listener for RTCDtlsTransport to capture state changes events\n * @private\n */\nPeerConnection.prototype._setupRTCDtlsTransportListener = function () {\n  var _this6 = this;\n\n  var dtlsTransport = this.getRTCDtlsTransport();\n\n  if (!dtlsTransport || dtlsTransport.onstatechange) {\n    return;\n  }\n\n  var handler = function handler() {\n    _this6._log.info('dtlsTransportState is \"' + dtlsTransport.state + '\"');\n    _this6.ondtlstransportstatechange(dtlsTransport.state);\n  };\n\n  // Publish initial state\n  handler();\n  dtlsTransport.onstatechange = handler;\n};\n\n/**\n * Setup a listener for RTCIceTransport to capture selected candidate pair changes\n * @private\n */\nPeerConnection.prototype._setupRTCIceTransportListener = function () {\n  var _this7 = this;\n\n  var iceTransport = this._getRTCIceTransport();\n\n  if (!iceTransport || iceTransport.onselectedcandidatepairchange) {\n    return;\n  }\n\n  iceTransport.onselectedcandidatepairchange = function () {\n    return _this7.onselectedcandidatepairchange(iceTransport.getSelectedCandidatePair());\n  };\n};\n\n/**\n * Restarts ICE for the current connection\n * ICE Restart failures are ignored. Retries are managed in Connection\n * @private\n */\nPeerConnection.prototype.iceRestart = function () {\n  var _this8 = this;\n\n  if (!this.options.enableIceRestart) {\n    return;\n  }\n  this._log.info('Attempting to restart ICE...');\n  this._hasIceCandidates = false;\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, { iceRestart: true }).then(function () {\n    _this8._removeReconnectionListeners();\n\n    _this8._onAnswerOrRinging = function (payload) {\n      _this8._removeReconnectionListeners();\n\n      if (!payload.sdp || _this8.version.pc.signalingState !== 'have-local-offer') {\n        var message = 'Invalid state or param during ICE Restart:' + ('hasSdp:' + !!payload.sdp + ', signalingState:' + _this8.version.pc.signalingState);\n        _this8._log.info(message);\n        return;\n      }\n\n      var sdp = _this8._maybeSetIceAggressiveNomination(payload.sdp);\n      _this8._answerSdp = sdp;\n      if (_this8.status !== 'closed') {\n        _this8.version.processAnswer(_this8.codecPreferences, sdp, null, function (err) {\n          var message = err && err.message ? err.message : err;\n          _this8._log.info('Failed to process answer during ICE Restart. Error: ' + message);\n        });\n      }\n    };\n\n    _this8._onHangup = function () {\n      _this8._log.info('Received hangup during ICE Restart');\n      _this8._removeReconnectionListeners();\n    };\n\n    _this8.pstream.on('answer', _this8._onAnswerOrRinging);\n    _this8.pstream.on('hangup', _this8._onHangup);\n    _this8.pstream.reinvite(_this8.version.getSDP(), _this8.callSid);\n  }).catch(function (err) {\n    var message = err && err.message ? err.message : err;\n    _this8._log.info('Failed to createOffer during ICE Restart. Error: ' + message);\n    // CreateOffer failures doesn't transition ice state to failed\n    // We need trigger it so it can be picked up by retries\n    _this8.onfailed(message);\n  });\n};\n\nPeerConnection.prototype.makeOutgoingCall = function (token, params, callsid, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  var _this9 = this;\n\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n\n  var self = this;\n  this.callSid = callsid;\n  function onAnswerSuccess() {\n    if (self.options) {\n      self._setEncodingParameters(self.options.dscp);\n    }\n    onMediaStarted(self.version.pc);\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error processing answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      } });\n  }\n  this._onAnswerOrRinging = function (payload) {\n    if (!payload.sdp) {\n      return;\n    }\n\n    var sdp = _this9._maybeSetIceAggressiveNomination(payload.sdp);\n    self._answerSdp = sdp;\n    if (self.status !== 'closed') {\n      self.version.processAnswer(_this9.codecPreferences, sdp, onAnswerSuccess, onAnswerError);\n    }\n    self.pstream.removeListener('answer', self._onAnswerOrRinging);\n    self.pstream.removeListener('ringing', self._onAnswerOrRinging);\n  };\n  this.pstream.on('answer', this._onAnswerOrRinging);\n  this.pstream.on('ringing', this._onAnswerOrRinging);\n\n  function onOfferSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.invite(self.version.getSDP(), self.callSid, self.options.preflight, params);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n\n  function onOfferError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error creating the offer: ' + errMsg,\n        twilioError: new MediaErrors.ClientLocalDescFailed()\n      } });\n  }\n\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, { audio: true }, onOfferSuccess, onOfferError);\n};\nPeerConnection.prototype.answerIncomingCall = function (callSid, sdp, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n  sdp = this._maybeSetIceAggressiveNomination(sdp);\n  this._answerSdp = sdp.replace(/^a=setup:actpass$/gm, 'a=setup:passive');\n  this.callSid = callSid;\n  var self = this;\n  function onAnswerSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.answer(self.version.getSDP(), callSid);\n      if (self.options) {\n        self._setEncodingParameters(self.options.dscp);\n      }\n      onMediaStarted(self.version.pc);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error creating the answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      } });\n  }\n  this.version.processSDP(this.options.maxAverageBitrate, this.codecPreferences, sdp, { audio: true }, onAnswerSuccess, onAnswerError);\n};\nPeerConnection.prototype.close = function () {\n  if (this.version && this.version.pc) {\n    if (this.version.pc.signalingState !== 'closed') {\n      this.version.pc.close();\n    }\n\n    this.version.pc = null;\n  }\n  if (this.stream) {\n    this.mute(false);\n    this._stopStream(this.stream);\n  }\n  this.stream = null;\n  this._removeReconnectionListeners();\n  this._stopIceGatheringTimeout();\n\n  Promise.all(this._removeAudioOutputs()).catch(function () {\n    // We don't need to alert about failures here.\n  });\n  if (this._mediaStreamSource) {\n    this._mediaStreamSource.disconnect();\n  }\n  if (this._inputAnalyser) {\n    this._inputAnalyser.disconnect();\n  }\n  if (this._outputAnalyser) {\n    this._outputAnalyser.disconnect();\n  }\n  if (this._inputAnalyser2) {\n    this._inputAnalyser2.disconnect();\n  }\n  if (this._outputAnalyser2) {\n    this._outputAnalyser2.disconnect();\n  }\n  this.status = 'closed';\n  this.onclose();\n};\nPeerConnection.prototype.reject = function (callSid) {\n  this.callSid = callSid;\n};\nPeerConnection.prototype.ignore = function (callSid) {\n  this.callSid = callSid;\n};\n/**\n * Mute or unmute input audio. If the stream is not yet present, the setting\n *   is saved and applied to future streams/tracks.\n * @params {boolean} shouldMute - Whether the input audio should\n *   be muted or unmuted.\n */\nPeerConnection.prototype.mute = function (shouldMute) {\n  this.isMuted = shouldMute;\n  if (!this.stream) {\n    return;\n  }\n\n  if (this._sender && this._sender.track) {\n    this._sender.track.enabled = !shouldMute;\n  } else {\n    var audioTracks = typeof this.stream.getAudioTracks === 'function' ? this.stream.getAudioTracks() : this.stream.audioTracks;\n\n    audioTracks.forEach(function (track) {\n      track.enabled = !shouldMute;\n    });\n  }\n};\n/**\n * Get or create an RTCDTMFSender for the first local audio MediaStreamTrack\n * we can get from the RTCPeerConnection. Return null if unsupported.\n * @instance\n * @returns ?RTCDTMFSender\n */\nPeerConnection.prototype.getOrCreateDTMFSender = function getOrCreateDTMFSender() {\n  if (this._dtmfSender || this._dtmfSenderUnsupported) {\n    return this._dtmfSender || null;\n  }\n\n  var self = this;\n  var pc = this.version.pc;\n  if (!pc) {\n    this._log.info('No RTCPeerConnection available to call createDTMFSender on');\n    return null;\n  }\n\n  if (typeof pc.getSenders === 'function' && (typeof RTCDTMFSender === 'function' || typeof RTCDtmfSender === 'function')) {\n    var chosenSender = pc.getSenders().find(function (sender) {\n      return sender.dtmf;\n    });\n    if (chosenSender) {\n      this._log.info('Using RTCRtpSender#dtmf');\n      this._dtmfSender = chosenSender.dtmf;\n      return this._dtmfSender;\n    }\n  }\n\n  if (typeof pc.createDTMFSender === 'function' && typeof pc.getLocalStreams === 'function') {\n    var track = pc.getLocalStreams().map(function (stream) {\n      var tracks = self._getAudioTracks(stream);\n      return tracks && tracks[0];\n    })[0];\n\n    if (!track) {\n      this._log.info('No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender');\n      return null;\n    }\n\n    this._log.info('Creating RTCDTMFSender');\n    this._dtmfSender = pc.createDTMFSender(track);\n    return this._dtmfSender;\n  }\n\n  this._log.info('RTCPeerConnection does not support RTCDTMFSender');\n  this._dtmfSenderUnsupported = true;\n  return null;\n};\n\n/**\n * Get the RTCDtlTransport object from the PeerConnection\n * @returns RTCDtlTransport\n */\nPeerConnection.prototype.getRTCDtlsTransport = function getRTCDtlsTransport() {\n  var sender = this.version && this.version.pc && typeof this.version.pc.getSenders === 'function' && this.version.pc.getSenders()[0];\n  return sender && sender.transport || null;\n};\n\nPeerConnection.prototype._canStopMediaStreamTrack = function () {\n  return typeof MediaStreamTrack.prototype.stop === 'function';\n};\n\nPeerConnection.prototype._getAudioTracks = function (stream) {\n  return typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n};\n\n/**\n * Get the RTCIceTransport object from the PeerConnection\n * @returns RTCIceTransport\n */\nPeerConnection.prototype._getRTCIceTransport = function _getRTCIceTransport() {\n  var dtlsTransport = this.getRTCDtlsTransport();\n  return dtlsTransport && dtlsTransport.iceTransport || null;\n};\n\n// Is PeerConnection.protocol used outside of our SDK? We should remove this if not.\nPeerConnection.protocol = function () {\n  return RTCPC.test() ? new RTCPC() : null;\n}();\n\nfunction addStream(pc, stream) {\n  if (typeof pc.addTrack === 'function') {\n    stream.getAudioTracks().forEach(function (track) {\n      // The second parameters, stream, should not be necessary per the latest editor's\n      //   draft, but FF requires it. https://bugzilla.mozilla.org/show_bug.cgi?id=1231414\n      pc.addTrack(track, stream);\n    });\n  } else {\n    pc.addStream(stream);\n  }\n}\n\nfunction cloneStream(oldStream) {\n  var newStream = typeof MediaStream !== 'undefined' ? new MediaStream()\n  // eslint-disable-next-line\n  : new webkitMediaStream();\n\n  oldStream.getAudioTracks().forEach(newStream.addTrack, newStream);\n  return newStream;\n}\n\nfunction removeStream(pc, stream) {\n  if (typeof pc.removeTrack === 'function') {\n    pc.getSenders().forEach(function (sender) {\n      pc.removeTrack(sender);\n    });\n  } else {\n    pc.removeStream(stream);\n  }\n}\n\n/**\n * Set the source of an HTMLAudioElement to the specified MediaStream\n * @param {HTMLAudioElement} audio\n * @param {MediaStream} stream\n * @returns {boolean} Whether the audio source was set successfully\n */\nfunction setAudioSource(audio, stream) {\n  if (typeof audio.srcObject !== 'undefined') {\n    audio.srcObject = stream;\n  } else if (typeof audio.mozSrcObject !== 'undefined') {\n    audio.mozSrcObject = stream;\n  } else if (typeof audio.src !== 'undefined') {\n    var _window = audio.options.window || window;\n    audio.src = (_window.URL || _window.webkitURL).createObjectURL(stream);\n  } else {\n    return false;\n  }\n\n  return true;\n}\n\nPeerConnection.enabled = RTCPC.test();\n\nmodule.exports = PeerConnection;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}