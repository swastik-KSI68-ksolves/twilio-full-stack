{"ast":null,"code":"'use strict';\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nvar C = require('./constants');\nvar EventEmitter = require('events').EventEmitter;\nvar Log = require('./log').default;\nvar util = require('util');\nvar WSTransport = require('./wstransport').default;\nvar _require = require('./errors'),\n  GeneralErrors = _require.GeneralErrors,\n  SignalingErrors = _require.SignalingErrors;\nvar PSTREAM_VERSION = '1.5';\n\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\nfunction PStream(token, uris, options) {\n  if (!(this instanceof PStream)) {\n    return new PStream(token, uris, options);\n  }\n  var defaults = {\n    TransportFactory: WSTransport\n  };\n  options = options || {};\n  for (var prop in defaults) {\n    if (prop in options) continue;\n    options[prop] = defaults[prop];\n  }\n  this.options = options;\n  this.token = token || '';\n  this.status = 'disconnected';\n  this.gateway = null;\n  this.region = null;\n  this._messageQueue = [];\n  this._uris = uris;\n  this._handleTransportClose = this._handleTransportClose.bind(this);\n  this._handleTransportError = this._handleTransportError.bind(this);\n  this._handleTransportMessage = this._handleTransportMessage.bind(this);\n  this._handleTransportOpen = this._handleTransportOpen.bind(this);\n  this._log = Log.getInstance();\n\n  // NOTE(mroberts): EventEmitter requires that we catch all errors.\n  this.on('error', function () {});\n\n  /*\n   *events used by device\n   *'invite',\n   *'ready',\n   *'error',\n   *'offline',\n   *\n   *'cancel',\n   *'presence',\n   *'roster',\n   *'answer',\n   *'candidate',\n   *'hangup'\n   */\n\n  var self = this;\n  this.addListener('ready', function () {\n    self.status = 'ready';\n  });\n  this.addListener('offline', function () {\n    self.status = 'offline';\n  });\n  this.addListener('close', function () {\n    self._log.info('Received \"close\" from server. Destroying PStream...');\n    self._destroy();\n  });\n  this.transport = new this.options.TransportFactory(this._uris, {\n    backoffMaxMs: this.options.backoffMaxMs\n  });\n  Object.defineProperties(this, {\n    uri: {\n      enumerable: true,\n      get: function get() {\n        return this.transport.uri;\n      }\n    }\n  });\n  this.transport.on('close', this._handleTransportClose);\n  this.transport.on('error', this._handleTransportError);\n  this.transport.on('message', this._handleTransportMessage);\n  this.transport.on('open', this._handleTransportOpen);\n  this.transport.open();\n  return this;\n}\nutil.inherits(PStream, EventEmitter);\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n    this.status = 'disconnected';\n  }\n};\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', {\n      error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      }\n    });\n    return;\n  }\n  // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n  this.emit('error', typeof error.code !== 'undefined' ? {\n    error: error\n  } : error);\n};\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n  var _JSON$parse = JSON.parse(msg.data),\n    type = _JSON$parse.type,\n    _JSON$parse$payload = _JSON$parse.payload,\n    payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n  this.emit(type, payload);\n};\nPStream.prototype._handleTransportOpen = function () {\n  var _this = this;\n  this.status = 'connected';\n  this.setToken(this.token);\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n  messages.forEach(function (message) {\n    return _this._publish.apply(_this, _toConsumableArray(message));\n  });\n};\n\n/**\n * @return {string}\n */\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n  this._publish('listen', payload);\n};\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n  this._publish('register', regPayload, true);\n};\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? {\n      params: params\n    } : {}\n  };\n  this._publish('invite', payload, true);\n};\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', {\n    sdp: sdp,\n    callsid: callsid\n  }, true);\n};\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', {\n    callsid: callsid,\n    dtmf: digits\n  }, true);\n};\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? {\n    callsid: callsid,\n    message: message\n  } : {\n    callsid: callsid\n  };\n  this._publish('hangup', payload, true);\n};\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', {\n    callsid: callsid\n  }, true);\n};\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', {\n    sdp: sdp,\n    callsid: callsid\n  }, false);\n};\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n  this.emit('offline', this);\n};\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n  this._destroy();\n  return this;\n};\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n  if (!isSent) {\n    this.emit('error', {\n      error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      }\n    });\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n  return info;\n}\nmodule.exports = PStream;","map":{"version":3,"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","C","require","EventEmitter","Log","default","util","WSTransport","_require","GeneralErrors","SignalingErrors","PSTREAM_VERSION","PStream","token","uris","options","defaults","TransportFactory","prop","status","gateway","region","_messageQueue","_uris","_handleTransportClose","bind","_handleTransportError","_handleTransportMessage","_handleTransportOpen","_log","getInstance","on","self","addListener","info","_destroy","transport","backoffMaxMs","Object","defineProperties","uri","enumerable","get","open","inherits","prototype","emit","error","code","message","twilioError","ConnectionDisconnected","msg","data","_JSON$parse","JSON","parse","type","_JSON$parse$payload","payload","undefined","ConnectionError","_this","setToken","messages","splice","forEach","_publish","apply","toString","browserinfo","getBrowserInfo","register","mediaCapabilities","regPayload","media","invite","sdp","callsid","preflight","params","twilio","answer","dtmf","digits","hangup","reject","reinvite","removeListener","close","destroy","publish","shouldRetry","stringify","version","isSent","send","TransportError","push","nav","navigator","p","v","RELEASE_VERSION","browser","userAgent","platform","plugin","module","exports"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/twilio-client/es5/twilio/pstream.js"],"sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar C = require('./constants');\nvar EventEmitter = require('events').EventEmitter;\nvar Log = require('./log').default;\nvar util = require('util');\n\nvar WSTransport = require('./wstransport').default;\n\nvar _require = require('./errors'),\n    GeneralErrors = _require.GeneralErrors,\n    SignalingErrors = _require.SignalingErrors;\n\nvar PSTREAM_VERSION = '1.5';\n\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\nfunction PStream(token, uris, options) {\n  if (!(this instanceof PStream)) {\n    return new PStream(token, uris, options);\n  }\n  var defaults = {\n    TransportFactory: WSTransport\n  };\n  options = options || {};\n  for (var prop in defaults) {\n    if (prop in options) continue;\n    options[prop] = defaults[prop];\n  }\n  this.options = options;\n  this.token = token || '';\n  this.status = 'disconnected';\n  this.gateway = null;\n  this.region = null;\n  this._messageQueue = [];\n  this._uris = uris;\n\n  this._handleTransportClose = this._handleTransportClose.bind(this);\n  this._handleTransportError = this._handleTransportError.bind(this);\n  this._handleTransportMessage = this._handleTransportMessage.bind(this);\n  this._handleTransportOpen = this._handleTransportOpen.bind(this);\n\n  this._log = Log.getInstance();\n\n  // NOTE(mroberts): EventEmitter requires that we catch all errors.\n  this.on('error', function () {});\n\n  /*\n   *events used by device\n   *'invite',\n   *'ready',\n   *'error',\n   *'offline',\n   *\n   *'cancel',\n   *'presence',\n   *'roster',\n   *'answer',\n   *'candidate',\n   *'hangup'\n   */\n\n  var self = this;\n\n  this.addListener('ready', function () {\n    self.status = 'ready';\n  });\n\n  this.addListener('offline', function () {\n    self.status = 'offline';\n  });\n\n  this.addListener('close', function () {\n    self._log.info('Received \"close\" from server. Destroying PStream...');\n    self._destroy();\n  });\n\n  this.transport = new this.options.TransportFactory(this._uris, {\n    backoffMaxMs: this.options.backoffMaxMs\n  });\n\n  Object.defineProperties(this, {\n    uri: {\n      enumerable: true,\n      get: function get() {\n        return this.transport.uri;\n      }\n    }\n  });\n\n  this.transport.on('close', this._handleTransportClose);\n  this.transport.on('error', this._handleTransportError);\n  this.transport.on('message', this._handleTransportMessage);\n  this.transport.on('open', this._handleTransportOpen);\n  this.transport.open();\n\n  return this;\n}\n\nutil.inherits(PStream, EventEmitter);\n\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', { error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    return;\n  }\n  // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n  this.emit('error', typeof error.code !== 'undefined' ? { error: error } : error);\n};\n\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  var _JSON$parse = JSON.parse(msg.data),\n      type = _JSON$parse.type,\n      _JSON$parse$payload = _JSON$parse.payload,\n      payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function () {\n  var _this = this;\n\n  this.status = 'connected';\n  this.setToken(this.token);\n\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n  messages.forEach(function (message) {\n    return _this._publish.apply(_this, _toConsumableArray(message));\n  });\n};\n\n/**\n * @return {string}\n */\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\n\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? { params: params } : {}\n  };\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', { sdp: sdp, callsid: callsid }, true);\n};\n\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', { callsid: callsid, dtmf: digits }, true);\n};\n\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? { callsid: callsid, message: message } : { callsid: callsid };\n  this._publish('hangup', payload, true);\n};\n\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', { callsid: callsid }, true);\n};\n\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', { sdp: sdp, callsid: callsid }, false);\n};\n\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n  this._destroy();\n  return this;\n};\n\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n\n  if (!isSent) {\n    this.emit('error', { error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      } });\n\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\n\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n\n  return info;\n}\n\nmodule.exports = PStream;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}