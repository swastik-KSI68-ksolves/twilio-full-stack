{"ast":null,"code":"\"use strict\";\n\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n// @ts-nocheck\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction request(method, params, callback) {\n  var body = JSON.stringify(params.body || {});\n  var headers = new Headers();\n  params.headers = params.headers || [];\n  Object.entries(params.headers).forEach(function (_a) {\n    var headerName = _a[0],\n      headerBody = _a[1];\n    return headers.append(headerName, headerBody);\n  });\n  fetch(params.url, {\n    body: body,\n    headers: headers,\n    method: method\n  }).then(function (response) {\n    return response.text();\n  }, callback).then(function (responseText) {\n    return callback(null, responseText);\n  }, callback);\n}\n/**\n * Use XMLHttpRequest to get a network resource.\n * @param {String} method - HTTP Method\n * @param {Object} params - Request parameters\n * @param {String} params.url - URL of the resource\n * @param {Array}  params.headers - An array of headers to pass [{ headerName : headerBody }]\n * @param {Object} params.body - A JSON body to send to the resource\n * @returns {response}\n */\nvar Request = request;\n/**\n * Sugar function for request('GET', params, callback);\n * @param {Object} params - Request parameters\n * @param {Request~get} callback - The callback that handles the response.\n */\nRequest.get = function get(params, callback) {\n  return new this('GET', params, callback);\n};\n/**\n * Sugar function for request('POST', params, callback);\n * @param {Object} params - Request parameters\n * @param {Request~post} callback - The callback that handles the response.\n */\nRequest.post = function post(params, callback) {\n  return new this('POST', params, callback);\n};\nexports.default = Request;","map":{"version":3,"names":["request","method","params","callback","body","JSON","stringify","headers","Headers","Object","entries","forEach","_a","headerName","headerBody","append","fetch","url","then","response","text","responseText","Request","get","post","exports","default"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/@twilio/voice-sdk/lib/twilio/request.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n// @ts-nocheck\n\nfunction request(method, params, callback) {\n  const body = JSON.stringify(params.body || {});\n  const headers = new Headers();\n\n  params.headers = params.headers || [];\n  Object.entries(params.headers).forEach(([headerName, headerBody]) =>\n    headers.append(headerName, headerBody));\n\n  fetch(params.url, { body, headers, method })\n    .then(response => response.text(), callback)\n    .then(responseText => callback(null, responseText), callback);\n}\n/**\n * Use XMLHttpRequest to get a network resource.\n * @param {String} method - HTTP Method\n * @param {Object} params - Request parameters\n * @param {String} params.url - URL of the resource\n * @param {Array}  params.headers - An array of headers to pass [{ headerName : headerBody }]\n * @param {Object} params.body - A JSON body to send to the resource\n * @returns {response}\n */\nconst Request = request;\n\n/**\n * Sugar function for request('GET', params, callback);\n * @param {Object} params - Request parameters\n * @param {Request~get} callback - The callback that handles the response.\n */\nRequest.get = function get(params, callback) {\n  return new this('GET', params, callback);\n};\n\n/**\n * Sugar function for request('POST', params, callback);\n * @param {Object} params - Request parameters\n * @param {Request~post} callback - The callback that handles the response.\n */\nRequest.post = function post(params, callback) {\n  return new this('POST', params, callback);\n};\n\nexport default Request;\n"],"mappings":";;AAAA;;;;;AAKA;;;;AAEA,SAASA,OAAOA,CAACC,MAAM,EAAEC,MAAM,EAAEC,QAAQ;EACvC,IAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACE,IAAI,IAAI,EAAE,CAAC;EAC9C,IAAMG,OAAO,GAAG,IAAIC,OAAO,EAAE;EAE7BN,MAAM,CAACK,OAAO,GAAGL,MAAM,CAACK,OAAO,IAAI,EAAE;EACrCE,MAAM,CAACC,OAAO,CAACR,MAAM,CAACK,OAAO,CAAC,CAACI,OAAO,CAAC,UAACC,EAAwB;QAAvBC,UAAU,GAAAD,EAAA;MAAEE,UAAU,GAAAF,EAAA;IAC7D,OAAAL,OAAO,CAACQ,MAAM,CAACF,UAAU,EAAEC,UAAU,CAAC;EAAtC,CAAsC,CAAC;EAEzCE,KAAK,CAACd,MAAM,CAACe,GAAG,EAAE;IAAEb,IAAI,EAAAA,IAAA;IAAEG,OAAO,EAAAA,OAAA;IAAEN,MAAM,EAAAA;EAAA,CAAE,CAAC,CACzCiB,IAAI,CAAC,UAAAC,QAAQ;IAAI,OAAAA,QAAQ,CAACC,IAAI,EAAE;EAAf,CAAe,EAAEjB,QAAQ,CAAC,CAC3Ce,IAAI,CAAC,UAAAG,YAAY;IAAI,OAAAlB,QAAQ,CAAC,IAAI,EAAEkB,YAAY,CAAC;EAA5B,CAA4B,EAAElB,QAAQ,CAAC;AACjE;AACA;;;;;;;;;AASA,IAAMmB,OAAO,GAAGtB,OAAO;AAEvB;;;;;AAKAsB,OAAO,CAACC,GAAG,GAAG,SAASA,GAAGA,CAACrB,MAAM,EAAEC,QAAQ;EACzC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAED,MAAM,EAAEC,QAAQ,CAAC;AAC1C,CAAC;AAED;;;;;AAKAmB,OAAO,CAACE,IAAI,GAAG,SAASA,IAAIA,CAACtB,MAAM,EAAEC,QAAQ;EAC3C,OAAO,IAAI,IAAI,CAAC,MAAM,EAAED,MAAM,EAAEC,QAAQ,CAAC;AAC3C,CAAC;AAEDsB,OAAA,CAAAC,OAAA,GAAeJ,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}