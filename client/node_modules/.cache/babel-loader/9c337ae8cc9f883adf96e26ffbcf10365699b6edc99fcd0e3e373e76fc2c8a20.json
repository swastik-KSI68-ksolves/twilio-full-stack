{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncQueue = void 0;\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nvar deferred_1 = require(\"./deferred\");\n/**\n * Queue async operations and executes them synchronously.\n */\nvar AsyncQueue = /** @class */function () {\n  function AsyncQueue() {\n    /**\n     * The list of async operations in this queue\n     */\n    this._operations = [];\n  }\n  /**\n   * Adds the async operation to the queue\n   * @param callback An async callback that returns a promise\n   * @returns A promise that will get resolved or rejected after executing the callback\n   */\n  AsyncQueue.prototype.enqueue = function (callback) {\n    var hasPending = !!this._operations.length;\n    var deferred = new deferred_1.default();\n    this._operations.push({\n      deferred: deferred,\n      callback: callback\n    });\n    if (!hasPending) {\n      this._processQueue();\n    }\n    return deferred.promise;\n  };\n  /**\n   * Start processing the queue. This executes the first item and removes it after.\n   * Then do the same for next items until the queue is emptied.\n   */\n  AsyncQueue.prototype._processQueue = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, deferred, callback, result, error, hasResolved, e_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this._operations.length) return [3 /*break*/, 5];\n            _a = this._operations[0], deferred = _a.deferred, callback = _a.callback;\n            result = void 0;\n            error = void 0;\n            hasResolved = void 0;\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, callback()];\n          case 2:\n            result = _b.sent();\n            hasResolved = true;\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _b.sent();\n            error = e_1;\n            return [3 /*break*/, 4];\n          case 4:\n            // Remove the item\n            this._operations.shift();\n            if (hasResolved) {\n              deferred.resolve(result);\n            } else {\n              deferred.reject(error);\n            }\n            return [3 /*break*/, 0];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return AsyncQueue;\n}();\nexports.AsyncQueue = AsyncQueue;","map":{"version":3,"names":["deferred_1","require","AsyncQueue","_operations","prototype","enqueue","callback","hasPending","length","deferred","default","push","_processQueue","promise","_a","result","error","hasResolved","_b","sent","e_1","shift","resolve","reject","exports"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/@twilio/voice-sdk/lib/twilio/asyncQueue.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nimport Deferred from './deferred';\n\n/**\n * Queue async operations and executes them synchronously.\n */\nexport class AsyncQueue {\n  /**\n   * The list of async operations in this queue\n   */\n  private _operations: AsyncQueue.Operation[] = [];\n\n  /**\n   * Adds the async operation to the queue\n   * @param callback An async callback that returns a promise\n   * @returns A promise that will get resolved or rejected after executing the callback\n   */\n  enqueue(callback: () => Promise<any>): Promise<any> {\n    const hasPending = !!this._operations.length;\n    const deferred = new Deferred();\n\n    this._operations.push({ deferred, callback });\n\n    if (!hasPending) {\n      this._processQueue();\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * Start processing the queue. This executes the first item and removes it after.\n   * Then do the same for next items until the queue is emptied.\n   */\n  private async _processQueue() {\n    while (this._operations.length) {\n      // Grab first item, don't remove from array yet until it's resolved/rejected\n      const { deferred, callback } = this._operations[0];\n\n      // We want to capture the result/error first so we can remove the item from the queue later\n      let result;\n      let error;\n      // Sometimes result and error are empty. So let's use a separate flag to determine if the promise has resolved\n      let hasResolved;\n      try {\n        result = await callback();\n        hasResolved = true;\n      } catch (e) {\n        error = e;\n      }\n\n      // Remove the item\n      this._operations.shift();\n\n      if (hasResolved) {\n        deferred.resolve(result);\n      } else {\n        deferred.reject(error);\n      }\n    }\n  }\n}\n\nexport namespace AsyncQueue {\n  /**\n   * Represent an [[AsyncQueue]] operation\n   */\n  export interface Operation {\n    /**\n     * An async callback that returns a promise. This will get called once it reaches the queue.\n     */\n    callback: () => Promise<any>;\n\n    /**\n     * A deferred promise that gets resolved or rejected after executing the async callback\n     */\n    deferred: Deferred;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKA,IAAAA,UAAA,GAAAC,OAAA;AAEA;;;AAGA,IAAAC,UAAA;EAAA,SAAAA,WAAA;IACE;;;IAGQ,KAAAC,WAAW,GAA2B,EAAE;EAmDlD;EAjDE;;;;;EAKAD,UAAA,CAAAE,SAAA,CAAAC,OAAO,GAAP,UAAQC,QAA4B;IAClC,IAAMC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACJ,WAAW,CAACK,MAAM;IAC5C,IAAMC,QAAQ,GAAG,IAAIT,UAAA,CAAAU,OAAQ,EAAE;IAE/B,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAC;MAAEF,QAAQ,EAAAA,QAAA;MAAEH,QAAQ,EAAAA;IAAA,CAAE,CAAC;IAE7C,IAAI,CAACC,UAAU,EAAE;MACf,IAAI,CAACK,aAAa,EAAE;;IAGtB,OAAOH,QAAQ,CAACI,OAAO;EACzB,CAAC;EAED;;;;EAIcX,UAAA,CAAAE,SAAA,CAAAQ,aAAa,GAA3B;;;;;;iBACS,IAAI,CAACT,WAAW,CAACK,MAAM;YAEtBM,EAAA,GAAyB,IAAI,CAACX,WAAW,CAAC,CAAC,CAAC,EAA1CM,QAAQ,GAAAK,EAAA,CAAAL,QAAA,EAAEH,QAAQ,GAAAQ,EAAA,CAAAR,QAAA;YAGtBS,MAAM;YACNC,KAAK;YAELC,WAAW;;;;YAEJ,qBAAMX,QAAQ,EAAE;;YAAzBS,MAAM,GAAGG,EAAA,CAAAC,IAAA,EAAgB;YACzBF,WAAW,GAAG,IAAI;;;;YAElBD,KAAK,GAAGI,GAAC;;;YAGX;YACA,IAAI,CAACjB,WAAW,CAACkB,KAAK,EAAE;YAExB,IAAIJ,WAAW,EAAE;cACfR,QAAQ,CAACa,OAAO,CAACP,MAAM,CAAC;aACzB,MAAM;cACLN,QAAQ,CAACc,MAAM,CAACP,KAAK,CAAC;;;;;;;;GAG3B;;EACH,OAAAd,UAAC;AAAD,CAAC,CAvDD;AAAasB,OAAA,CAAAtB,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}