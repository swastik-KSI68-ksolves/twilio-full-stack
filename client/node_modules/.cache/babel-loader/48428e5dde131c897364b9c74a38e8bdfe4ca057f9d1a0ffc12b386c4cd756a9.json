{"ast":null,"code":"/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = require('util');\nvar errors = module.exports = require('./errors');\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\n  messageFormat = messageFormat || '';\n  var message = util.format.apply(this, [messageFormat].concat(formatArgs));\n  var error = new ExceptionConstructor(message);\n  Error.captureStackTrace(error, callee);\n  throw error;\n}\nfunction failArgumentCheck(callee, message, formatArgs) {\n  failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\n}\nfunction failStateCheck(callee, message, formatArgs) {\n  failCheck(errors.IllegalStateError, callee, message, formatArgs);\n}\nmodule.exports.checkArgument = function (value, message) {\n  if (!value) {\n    failArgumentCheck(arguments.callee, message, Array.prototype.slice.call(arguments, 2));\n  }\n};\nmodule.exports.checkState = function (value, message) {\n  if (!value) {\n    failStateCheck(arguments.callee, message, Array.prototype.slice.call(arguments, 2));\n  }\n};\nmodule.exports.checkIsDef = function (value, message) {\n  if (value !== undefined) {\n    return value;\n  }\n  failArgumentCheck(arguments.callee, message || 'Expected value to be defined but was undefined.', Array.prototype.slice.call(arguments, 2));\n};\nmodule.exports.checkIsDefAndNotNull = function (value, message) {\n  // Note that undefined == null.\n  if (value != null) {\n    return value;\n  }\n  failArgumentCheck(arguments.callee, message || 'Expected value to be defined and not null but got \"' + typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\n};\n\n// Fixed version of the typeOf operator which returns 'null' for null values\n// and 'array' for arrays.\nfunction typeOf(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (!value) {\n      return 'null';\n    } else if (value instanceof Array) {\n      return 'array';\n    }\n  }\n  return s;\n}\nfunction typeCheck(expect) {\n  return function (value, message) {\n    var type = typeOf(value);\n    if (type == expect) {\n      return value;\n    }\n    failArgumentCheck(arguments.callee, message || 'Expected \"' + expect + '\" but got \"' + type + '\".', Array.prototype.slice.call(arguments, 2));\n  };\n}\nmodule.exports.checkIsString = typeCheck('string');\nmodule.exports.checkIsArray = typeCheck('array');\nmodule.exports.checkIsNumber = typeCheck('number');\nmodule.exports.checkIsBoolean = typeCheck('boolean');\nmodule.exports.checkIsFunction = typeCheck('function');\nmodule.exports.checkIsObject = typeCheck('object');","map":{"version":3,"names":["util","require","errors","module","exports","failCheck","ExceptionConstructor","callee","messageFormat","formatArgs","message","format","apply","concat","error","Error","captureStackTrace","failArgumentCheck","IllegalArgumentError","failStateCheck","IllegalStateError","checkArgument","value","arguments","Array","prototype","slice","call","checkState","checkIsDef","undefined","checkIsDefAndNotNull","typeOf","s","typeCheck","expect","type","checkIsString","checkIsArray","checkIsNumber","checkIsBoolean","checkIsFunction","checkIsObject"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/precond/lib/checks.js"],"sourcesContent":["/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = require('util');\n\nvar errors = module.exports = require('./errors');\n\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\n    messageFormat = messageFormat || '';\n    var message = util.format.apply(this, [messageFormat].concat(formatArgs));\n    var error = new ExceptionConstructor(message);\n    Error.captureStackTrace(error, callee);\n    throw error;\n}\n\nfunction failArgumentCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\n}\n\nfunction failStateCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalStateError, callee, message, formatArgs);\n}\n\nmodule.exports.checkArgument = function(value, message) {\n    if (!value) {\n        failArgumentCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkState = function(value, message) {\n    if (!value) {\n        failStateCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkIsDef = function(value, message) {\n    if (value !== undefined) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined but was undefined.',\n        Array.prototype.slice.call(arguments, 2));\n};\n\nmodule.exports.checkIsDefAndNotNull = function(value, message) {\n    // Note that undefined == null.\n    if (value != null) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined and not null but got \"' +\n        typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\n};\n\n// Fixed version of the typeOf operator which returns 'null' for null values\n// and 'array' for arrays.\nfunction typeOf(value) {\n    var s = typeof value;\n    if (s == 'object') {\n        if (!value) {\n            return 'null';\n        } else if (value instanceof Array) {\n            return 'array';\n        }\n    }\n    return s;\n}\n\nfunction typeCheck(expect) {\n    return function(value, message) {\n        var type = typeOf(value);\n\n        if (type == expect) {\n            return value;\n        }\n\n        failArgumentCheck(arguments.callee, message ||\n            'Expected \"' + expect + '\" but got \"' + type + '\".',\n            Array.prototype.slice.call(arguments, 2));\n    };\n}\n\nmodule.exports.checkIsString = typeCheck('string');\nmodule.exports.checkIsArray = typeCheck('array');\nmodule.exports.checkIsNumber = typeCheck('number');\nmodule.exports.checkIsBoolean = typeCheck('boolean');\nmodule.exports.checkIsFunction = typeCheck('function');\nmodule.exports.checkIsObject = typeCheck('object');\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,MAAM,GAAGC,MAAM,CAACC,OAAO,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEjD,SAASI,SAASA,CAACC,oBAAoB,EAAEC,MAAM,EAAEC,aAAa,EAAEC,UAAU,EAAE;EACxED,aAAa,GAAGA,aAAa,IAAI,EAAE;EACnC,IAAIE,OAAO,GAAGV,IAAI,CAACW,MAAM,CAACC,KAAK,CAAC,IAAI,EAAE,CAACJ,aAAa,CAAC,CAACK,MAAM,CAACJ,UAAU,CAAC,CAAC;EACzE,IAAIK,KAAK,GAAG,IAAIR,oBAAoB,CAACI,OAAO,CAAC;EAC7CK,KAAK,CAACC,iBAAiB,CAACF,KAAK,EAAEP,MAAM,CAAC;EACtC,MAAMO,KAAK;AACf;AAEA,SAASG,iBAAiBA,CAACV,MAAM,EAAEG,OAAO,EAAED,UAAU,EAAE;EACpDJ,SAAS,CAACH,MAAM,CAACgB,oBAAoB,EAAEX,MAAM,EAAEG,OAAO,EAAED,UAAU,CAAC;AACvE;AAEA,SAASU,cAAcA,CAACZ,MAAM,EAAEG,OAAO,EAAED,UAAU,EAAE;EACjDJ,SAAS,CAACH,MAAM,CAACkB,iBAAiB,EAAEb,MAAM,EAAEG,OAAO,EAAED,UAAU,CAAC;AACpE;AAEAN,MAAM,CAACC,OAAO,CAACiB,aAAa,GAAG,UAASC,KAAK,EAAEZ,OAAO,EAAE;EACpD,IAAI,CAACY,KAAK,EAAE;IACRL,iBAAiB,CAACM,SAAS,CAAChB,MAAM,EAAEG,OAAO,EACvCc,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;EACjD;AACJ,CAAC;AAEDpB,MAAM,CAACC,OAAO,CAACwB,UAAU,GAAG,UAASN,KAAK,EAAEZ,OAAO,EAAE;EACjD,IAAI,CAACY,KAAK,EAAE;IACRH,cAAc,CAACI,SAAS,CAAChB,MAAM,EAAEG,OAAO,EACpCc,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;EACjD;AACJ,CAAC;AAEDpB,MAAM,CAACC,OAAO,CAACyB,UAAU,GAAG,UAASP,KAAK,EAAEZ,OAAO,EAAE;EACjD,IAAIY,KAAK,KAAKQ,SAAS,EAAE;IACrB,OAAOR,KAAK;EAChB;EAEAL,iBAAiB,CAACM,SAAS,CAAChB,MAAM,EAAEG,OAAO,IACvC,iDAAiD,EACjDc,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;AACjD,CAAC;AAEDpB,MAAM,CAACC,OAAO,CAAC2B,oBAAoB,GAAG,UAAST,KAAK,EAAEZ,OAAO,EAAE;EAC3D;EACA,IAAIY,KAAK,IAAI,IAAI,EAAE;IACf,OAAOA,KAAK;EAChB;EAEAL,iBAAiB,CAACM,SAAS,CAAChB,MAAM,EAAEG,OAAO,IACvC,qDAAqD,GACrDsB,MAAM,CAACV,KAAK,CAAC,GAAG,IAAI,EAAEE,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;AACvE,CAAC;;AAED;AACA;AACA,SAASS,MAAMA,CAACV,KAAK,EAAE;EACnB,IAAIW,CAAC,GAAG,OAAOX,KAAK;EACpB,IAAIW,CAAC,IAAI,QAAQ,EAAE;IACf,IAAI,CAACX,KAAK,EAAE;MACR,OAAO,MAAM;IACjB,CAAC,MAAM,IAAIA,KAAK,YAAYE,KAAK,EAAE;MAC/B,OAAO,OAAO;IAClB;EACJ;EACA,OAAOS,CAAC;AACZ;AAEA,SAASC,SAASA,CAACC,MAAM,EAAE;EACvB,OAAO,UAASb,KAAK,EAAEZ,OAAO,EAAE;IAC5B,IAAI0B,IAAI,GAAGJ,MAAM,CAACV,KAAK,CAAC;IAExB,IAAIc,IAAI,IAAID,MAAM,EAAE;MAChB,OAAOb,KAAK;IAChB;IAEAL,iBAAiB,CAACM,SAAS,CAAChB,MAAM,EAAEG,OAAO,IACvC,YAAY,GAAGyB,MAAM,GAAG,aAAa,GAAGC,IAAI,GAAG,IAAI,EACnDZ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;EACjD,CAAC;AACL;AAEApB,MAAM,CAACC,OAAO,CAACiC,aAAa,GAAGH,SAAS,CAAC,QAAQ,CAAC;AAClD/B,MAAM,CAACC,OAAO,CAACkC,YAAY,GAAGJ,SAAS,CAAC,OAAO,CAAC;AAChD/B,MAAM,CAACC,OAAO,CAACmC,aAAa,GAAGL,SAAS,CAAC,QAAQ,CAAC;AAClD/B,MAAM,CAACC,OAAO,CAACoC,cAAc,GAAGN,SAAS,CAAC,SAAS,CAAC;AACpD/B,MAAM,CAACC,OAAO,CAACqC,eAAe,GAAGP,SAAS,CAAC,UAAU,CAAC;AACtD/B,MAAM,CAACC,OAAO,CAACsC,aAAa,GAAGR,SAAS,CAAC,QAAQ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}