{"ast":null,"code":"//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = require('events');\nvar precond = require('precond');\nvar util = require('util');\n\n// A class to hold the state of a backoff operation. Accepts a backoff strategy\n// to generate the backoff delays.\nfunction Backoff(backoffStrategy) {\n  events.EventEmitter.call(this);\n  this.backoffStrategy_ = backoffStrategy;\n  this.maxNumberOfRetry_ = -1;\n  this.backoffNumber_ = 0;\n  this.backoffDelay_ = 0;\n  this.timeoutID_ = -1;\n  this.handlers = {\n    backoff: this.onBackoff_.bind(this)\n  };\n}\nutil.inherits(Backoff, events.EventEmitter);\n\n// Sets a limit, greater than 0, on the maximum number of backoffs. A 'fail'\n// event will be emitted when the limit is reached.\nBackoff.prototype.failAfter = function (maxNumberOfRetry) {\n  precond.checkArgument(maxNumberOfRetry > 0, 'Expected a maximum number of retry greater than 0 but got %s.', maxNumberOfRetry);\n  this.maxNumberOfRetry_ = maxNumberOfRetry;\n};\n\n// Starts a backoff operation. Accepts an optional parameter to let the\n// listeners know why the backoff operation was started.\nBackoff.prototype.backoff = function (err) {\n  precond.checkState(this.timeoutID_ === -1, 'Backoff in progress.');\n  if (this.backoffNumber_ === this.maxNumberOfRetry_) {\n    this.emit('fail', err);\n    this.reset();\n  } else {\n    this.backoffDelay_ = this.backoffStrategy_.next();\n    this.timeoutID_ = setTimeout(this.handlers.backoff, this.backoffDelay_);\n    this.emit('backoff', this.backoffNumber_, this.backoffDelay_, err);\n  }\n};\n\n// Handles the backoff timeout completion.\nBackoff.prototype.onBackoff_ = function () {\n  this.timeoutID_ = -1;\n  this.emit('ready', this.backoffNumber_, this.backoffDelay_);\n  this.backoffNumber_++;\n};\n\n// Stops any backoff operation and resets the backoff delay to its inital value.\nBackoff.prototype.reset = function () {\n  this.backoffNumber_ = 0;\n  this.backoffStrategy_.reset();\n  clearTimeout(this.timeoutID_);\n  this.timeoutID_ = -1;\n};\nmodule.exports = Backoff;","map":{"version":3,"names":["events","require","precond","util","Backoff","backoffStrategy","EventEmitter","call","backoffStrategy_","maxNumberOfRetry_","backoffNumber_","backoffDelay_","timeoutID_","handlers","backoff","onBackoff_","bind","inherits","prototype","failAfter","maxNumberOfRetry","checkArgument","err","checkState","emit","reset","next","setTimeout","clearTimeout","module","exports"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/backoff/lib/backoff.js"],"sourcesContent":["//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = require('events');\nvar precond = require('precond');\nvar util = require('util');\n\n// A class to hold the state of a backoff operation. Accepts a backoff strategy\n// to generate the backoff delays.\nfunction Backoff(backoffStrategy) {\n    events.EventEmitter.call(this);\n\n    this.backoffStrategy_ = backoffStrategy;\n    this.maxNumberOfRetry_ = -1;\n    this.backoffNumber_ = 0;\n    this.backoffDelay_ = 0;\n    this.timeoutID_ = -1;\n\n    this.handlers = {\n        backoff: this.onBackoff_.bind(this)\n    };\n}\nutil.inherits(Backoff, events.EventEmitter);\n\n// Sets a limit, greater than 0, on the maximum number of backoffs. A 'fail'\n// event will be emitted when the limit is reached.\nBackoff.prototype.failAfter = function(maxNumberOfRetry) {\n    precond.checkArgument(maxNumberOfRetry > 0,\n        'Expected a maximum number of retry greater than 0 but got %s.',\n        maxNumberOfRetry);\n\n    this.maxNumberOfRetry_ = maxNumberOfRetry;\n};\n\n// Starts a backoff operation. Accepts an optional parameter to let the\n// listeners know why the backoff operation was started.\nBackoff.prototype.backoff = function(err) {\n    precond.checkState(this.timeoutID_ === -1, 'Backoff in progress.');\n\n    if (this.backoffNumber_ === this.maxNumberOfRetry_) {\n        this.emit('fail', err);\n        this.reset();\n    } else {\n        this.backoffDelay_ = this.backoffStrategy_.next();\n        this.timeoutID_ = setTimeout(this.handlers.backoff, this.backoffDelay_);\n        this.emit('backoff', this.backoffNumber_, this.backoffDelay_, err);\n    }\n};\n\n// Handles the backoff timeout completion.\nBackoff.prototype.onBackoff_ = function() {\n    this.timeoutID_ = -1;\n    this.emit('ready', this.backoffNumber_, this.backoffDelay_);\n    this.backoffNumber_++;\n};\n\n// Stops any backoff operation and resets the backoff delay to its inital value.\nBackoff.prototype.reset = function() {\n    this.backoffNumber_ = 0;\n    this.backoffStrategy_.reset();\n    clearTimeout(this.timeoutID_);\n    this.timeoutID_ = -1;\n};\n\nmodule.exports = Backoff;\n"],"mappings":"AAAA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA,SAASG,OAAOA,CAACC,eAAe,EAAE;EAC9BL,MAAM,CAACM,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAE9B,IAAI,CAACC,gBAAgB,GAAGH,eAAe;EACvC,IAAI,CAACI,iBAAiB,GAAG,CAAC,CAAC;EAC3B,IAAI,CAACC,cAAc,GAAG,CAAC;EACvB,IAAI,CAACC,aAAa,GAAG,CAAC;EACtB,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;EAEpB,IAAI,CAACC,QAAQ,GAAG;IACZC,OAAO,EAAE,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI;EACtC,CAAC;AACL;AACAb,IAAI,CAACc,QAAQ,CAACb,OAAO,EAAEJ,MAAM,CAACM,YAAY,CAAC;;AAE3C;AACA;AACAF,OAAO,CAACc,SAAS,CAACC,SAAS,GAAG,UAASC,gBAAgB,EAAE;EACrDlB,OAAO,CAACmB,aAAa,CAACD,gBAAgB,GAAG,CAAC,EACtC,+DAA+D,EAC/DA,gBAAgB,CAAC;EAErB,IAAI,CAACX,iBAAiB,GAAGW,gBAAgB;AAC7C,CAAC;;AAED;AACA;AACAhB,OAAO,CAACc,SAAS,CAACJ,OAAO,GAAG,UAASQ,GAAG,EAAE;EACtCpB,OAAO,CAACqB,UAAU,CAAC,IAAI,CAACX,UAAU,KAAK,CAAC,CAAC,EAAE,sBAAsB,CAAC;EAElE,IAAI,IAAI,CAACF,cAAc,KAAK,IAAI,CAACD,iBAAiB,EAAE;IAChD,IAAI,CAACe,IAAI,CAAC,MAAM,EAAEF,GAAG,CAAC;IACtB,IAAI,CAACG,KAAK,CAAC,CAAC;EAChB,CAAC,MAAM;IACH,IAAI,CAACd,aAAa,GAAG,IAAI,CAACH,gBAAgB,CAACkB,IAAI,CAAC,CAAC;IACjD,IAAI,CAACd,UAAU,GAAGe,UAAU,CAAC,IAAI,CAACd,QAAQ,CAACC,OAAO,EAAE,IAAI,CAACH,aAAa,CAAC;IACvE,IAAI,CAACa,IAAI,CAAC,SAAS,EAAE,IAAI,CAACd,cAAc,EAAE,IAAI,CAACC,aAAa,EAAEW,GAAG,CAAC;EACtE;AACJ,CAAC;;AAED;AACAlB,OAAO,CAACc,SAAS,CAACH,UAAU,GAAG,YAAW;EACtC,IAAI,CAACH,UAAU,GAAG,CAAC,CAAC;EACpB,IAAI,CAACY,IAAI,CAAC,OAAO,EAAE,IAAI,CAACd,cAAc,EAAE,IAAI,CAACC,aAAa,CAAC;EAC3D,IAAI,CAACD,cAAc,EAAE;AACzB,CAAC;;AAED;AACAN,OAAO,CAACc,SAAS,CAACO,KAAK,GAAG,YAAW;EACjC,IAAI,CAACf,cAAc,GAAG,CAAC;EACvB,IAAI,CAACF,gBAAgB,CAACiB,KAAK,CAAC,CAAC;EAC7BG,YAAY,CAAC,IAAI,CAAChB,UAAU,CAAC;EAC7B,IAAI,CAACA,UAAU,GAAG,CAAC,CAAC;AACxB,CAAC;AAEDiB,MAAM,CAACC,OAAO,GAAG1B,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}