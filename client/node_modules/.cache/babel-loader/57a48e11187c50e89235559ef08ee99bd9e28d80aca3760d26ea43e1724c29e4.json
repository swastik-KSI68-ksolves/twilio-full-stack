{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar NotSupportedError = require('../errors').NotSupportedError;\nvar util = require('../util');\nfunction getUserMedia(constraints, options) {\n  options = options || {};\n  options.util = options.util || util;\n  options.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  return new Promise(function (resolve, reject) {\n    if (!options.navigator) {\n      throw new NotSupportedError('getUserMedia is not supported');\n    }\n    switch ('function') {\n      case _typeof(options.navigator.mediaDevices && options.navigator.mediaDevices.getUserMedia):\n        return resolve(options.navigator.mediaDevices.getUserMedia(constraints));\n      case _typeof(options.navigator.webkitGetUserMedia):\n        return options.navigator.webkitGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.mozGetUserMedia):\n        return options.navigator.mozGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.getUserMedia):\n        return options.navigator.getUserMedia(constraints, resolve, reject);\n      default:\n        throw new NotSupportedError('getUserMedia is not supported');\n    }\n  }).catch(function (e) {\n    throw options.util.isFirefox() && e.name === 'NotReadableError' ? new NotSupportedError('Firefox does not currently support opening multiple audio input tracks' + 'simultaneously, even across different tabs.\\n' + 'Related Bugzilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324') : e;\n  });\n}\nmodule.exports = getUserMedia;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","NotSupportedError","require","util","getUserMedia","constraints","options","navigator","Promise","resolve","reject","mediaDevices","webkitGetUserMedia","mozGetUserMedia","catch","e","isFirefox","name","module","exports"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/node_modules/twilio-client/es5/twilio/rtc/getusermedia.js"],"sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar NotSupportedError = require('../errors').NotSupportedError;\nvar util = require('../util');\n\nfunction getUserMedia(constraints, options) {\n  options = options || {};\n  options.util = options.util || util;\n  options.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n\n  return new Promise(function (resolve, reject) {\n    if (!options.navigator) {\n      throw new NotSupportedError('getUserMedia is not supported');\n    }\n\n    switch ('function') {\n      case _typeof(options.navigator.mediaDevices && options.navigator.mediaDevices.getUserMedia):\n        return resolve(options.navigator.mediaDevices.getUserMedia(constraints));\n      case _typeof(options.navigator.webkitGetUserMedia):\n        return options.navigator.webkitGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.mozGetUserMedia):\n        return options.navigator.mozGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.getUserMedia):\n        return options.navigator.getUserMedia(constraints, resolve, reject);\n      default:\n        throw new NotSupportedError('getUserMedia is not supported');\n    }\n  }).catch(function (e) {\n    throw options.util.isFirefox() && e.name === 'NotReadableError' ? new NotSupportedError('Firefox does not currently support opening multiple audio input tracks' + 'simultaneously, even across different tabs.\\n' + 'Related Bugzilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324') : e;\n  });\n}\n\nmodule.exports = getUserMedia;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,GAAG,UAAUC,GAAG,EAAE;EAAE,OAAO,OAAOA,GAAG;AAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAI,OAAOF,MAAM,KAAK,UAAU,IAAIE,GAAG,CAACC,WAAW,KAAKH,MAAM,IAAIE,GAAG,KAAKF,MAAM,CAACI,SAAS,GAAG,QAAQ,GAAG,OAAOF,GAAG;AAAE,CAAC;AAE5Q,IAAIG,iBAAiB,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,iBAAiB;AAC9D,IAAIE,IAAI,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE7B,SAASE,YAAYA,CAACC,WAAW,EAAEC,OAAO,EAAE;EAC1CA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvBA,OAAO,CAACH,IAAI,GAAGG,OAAO,CAACH,IAAI,IAAIA,IAAI;EACnCG,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,KAAK,OAAOA,SAAS,KAAK,WAAW,GAAGA,SAAS,GAAG,IAAI,CAAC;EAE9F,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,IAAI,CAACJ,OAAO,CAACC,SAAS,EAAE;MACtB,MAAM,IAAIN,iBAAiB,CAAC,+BAA+B,CAAC;IAC9D;IAEA,QAAQ,UAAU;MAChB,KAAKN,OAAO,CAACW,OAAO,CAACC,SAAS,CAACI,YAAY,IAAIL,OAAO,CAACC,SAAS,CAACI,YAAY,CAACP,YAAY,CAAC;QACzF,OAAOK,OAAO,CAACH,OAAO,CAACC,SAAS,CAACI,YAAY,CAACP,YAAY,CAACC,WAAW,CAAC,CAAC;MAC1E,KAAKV,OAAO,CAACW,OAAO,CAACC,SAAS,CAACK,kBAAkB,CAAC;QAChD,OAAON,OAAO,CAACC,SAAS,CAACK,kBAAkB,CAACP,WAAW,EAAEI,OAAO,EAAEC,MAAM,CAAC;MAC3E,KAAKf,OAAO,CAACW,OAAO,CAACC,SAAS,CAACM,eAAe,CAAC;QAC7C,OAAOP,OAAO,CAACC,SAAS,CAACM,eAAe,CAACR,WAAW,EAAEI,OAAO,EAAEC,MAAM,CAAC;MACxE,KAAKf,OAAO,CAACW,OAAO,CAACC,SAAS,CAACH,YAAY,CAAC;QAC1C,OAAOE,OAAO,CAACC,SAAS,CAACH,YAAY,CAACC,WAAW,EAAEI,OAAO,EAAEC,MAAM,CAAC;MACrE;QACE,MAAM,IAAIT,iBAAiB,CAAC,+BAA+B,CAAC;IAChE;EACF,CAAC,CAAC,CAACa,KAAK,CAAC,UAAUC,CAAC,EAAE;IACpB,MAAMT,OAAO,CAACH,IAAI,CAACa,SAAS,CAAC,CAAC,IAAID,CAAC,CAACE,IAAI,KAAK,kBAAkB,GAAG,IAAIhB,iBAAiB,CAAC,wEAAwE,GAAG,+CAA+C,GAAG,+EAA+E,CAAC,GAAGc,CAAC;EAC3S,CAAC,CAAC;AACJ;AAEAG,MAAM,CAACC,OAAO,GAAGf,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}