{"ast":null,"code":"var _jsxFileName = \"/home/swastikksi/Documents/react/twilio-Ksolves/src/Pages/CallingTwilio.js\",\n  _s = $RefreshSig$();\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { Form } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { useEffect, useState } from \"react\";\nimport { Device } from \"twilio-client\";\nimport Navbar from \"../Components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CallingTwilio = () => {\n  _s();\n  const [inputNumber, setInputNumber] = useState(\"\");\n  const [varDevice, setVarDevice] = useState(\"\");\n  useEffect(() => setupClientForCall(), []);\n  const handleCallPress = async e => {\n    e.preventDefault();\n    makeOutgoingCall(inputNumber, varDevice);\n  };\n  const handleInput = e => {\n    const inputPhoneNumber = e.target.value;\n    setInputNumber(inputPhoneNumber);\n  };\n  const makeOutgoingCall = async (phoneNumber, varDevice) => {\n    var params = {\n      To: phoneNumber\n    };\n    if (varDevice) {\n      console.log(`Attempting to call ${params.To} ...`);\n      const call = await varDevice.connect({\n        params\n      });\n      call.on(\"accept\", () => {\n        console.console.log(\"CALL ACCEPTED\");\n      });\n      call.on(\"disconnect\", () => {\n        console.console.log(\"CALL DISCONNECTED\");\n      });\n      call.on(\"cancel\", () => {\n        console.console.log(\"CALL REJECTED\");\n      });\n    } else {\n      console.log(\"Unable to make call.\");\n    }\n\n    // TODO: Make it so that hangup button can work\n    // outgoingCallHangupButton.onclick = () => {\n    //   log(\"Hanging up ...\");\n    //   call.disconnect();\n    // };\n  };\n\n  const setupClientForCall = () => {\n    console.log(\"Requesting Access Token...\");\n    try {\n      // TODO: fetch token from server\n      const staticToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTS2ZmZTFjNTRiYmI5MTlmYTU3ZTNhM2M1MzVkYzQ1NTc2LTE2ODg0NTExNDEiLCJncmFudHMiOnsiaWRlbnRpdHkiOiJEYXBwZXJEYW5ueU9ha2xhbmQiLCJ2b2ljZSI6eyJpbmNvbWluZyI6eyJhbGxvdyI6dHJ1ZX0sIm91dGdvaW5nIjp7ImFwcGxpY2F0aW9uX3NpZCI6IkFQYmUzYzliOGU4ZTNmN2Y2OTMxMjViMzUzOTYzY2Y5ODQifX19LCJpYXQiOjE2ODg0NTExNDEsImV4cCI6MTY4ODQ1NDc0MSwiaXNzIjoiU0tmZmUxYzU0YmJiOTE5ZmE1N2UzYTNjNTM1ZGM0NTU3NiIsInN1YiI6IkFDOGU2YWQwNTFmYmI2NmJjYWM1ODUzOGI3M2RlYjk0M2EifQ.8aMSdKMTd1Din3wcZn9w_KeW00Bqxt8vZ1kGgde_bn8\";\n      intitializeDevice(staticToken);\n    } catch (err) {\n      console.log(\"setupClientForCall ERR\", err);\n      console.log(\"An error occurred.during setupClientForCall\");\n    }\n  };\n  const intitializeDevice = async token => {\n    console.log(\"Initializing device\");\n    let device = new Device(token, {\n      logLevel: 1,\n      codecPreferences: [\"opus\", \"pcmu\"]\n    });\n    setVarDevice(device);\n    addDeviceListeners(device);\n    const response = await device.register();\n    console.log(\"response\", response);\n  };\n  const addDeviceListeners = device => {\n    device.on(\"registered\", () => {\n      console.log(\"Twilio.Device Ready to make and receive calls!\");\n    });\n    device.on(\"error\", error => {\n      console.log(\"Twilio.Device Error: \" + error.message);\n    });\n    device.on(\"incoming\", handleIncomingCall);\n\n    // device.audio.on(\"deviceChange\", updateAllAudioDevices.bind(device));\n\n    // Show audio selection UI if it is supported by the browser.\n    // if (device.audio.isOutputSelectionSupported) {\n    //   audioSelectionDiv.classList.remove(\"hide\");\n    // }\n  };\n\n  // HANDLE INCOMING CALL\n\n  const handleIncomingCall = call => {\n    console.log(`Incoming call from ${call.parameters.From}`);\n\n    //TODO: show incoming call div and incoming phone number\n\n    //add event listeners for Accept, Reject, and Hangup buttons\n    // incomingCallAcceptButton.onclick = () => {\n    //   acceptIncomingCall(call);\n    // };\n\n    // incomingCallRejectButton.onclick = () => {\n    //   rejectIncomingCall(call);\n    // };\n\n    // incomingCallHangupButton.onclick = () => {\n    //   hangupIncomingCall(call);\n    // };\n\n    // add event listener to call object\n    call.on(\"cancel\", handleDisconnectedIncomingCall);\n    call.on(\"disconnect\", handleDisconnectedIncomingCall);\n    call.on(\"reject\", handleDisconnectedIncomingCall);\n  };\n\n  // ACCEPT INCOMING CALL\n\n  function acceptIncomingCall(call) {\n    call.accept();\n    console.log(\"Accepted incoming call.\");\n  }\n\n  // REJECT INCOMING CALL\n\n  function rejectIncomingCall(call) {\n    call.reject();\n    console.log(\"Rejected incoming call\");\n  }\n\n  // HANG UP INCOMING CALL\n\n  function hangupIncomingCall(call) {\n    call.disconnect();\n    console.log(\"Hanging up incoming call\");\n  }\n\n  // HANDLE CANCELLED INCOMING CALL\n\n  function handleDisconnectedIncomingCall() {\n    console.log(\"Incoming call ended.\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Twilio Voice JavaScript SDK Quickstart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Make a Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Enter a phone number or client name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCallPress,\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Enter phone number\",\n                name: \"phone\",\n                type: \"number\",\n                value: inputNumber,\n                onChange: handleInput,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"sunmit\",\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CallingTwilio, \"PY4SDUSDkWefRTY17kk9qTybimo=\");\n_c = CallingTwilio;\nexport default CallingTwilio;\nvar _c;\n$RefreshReg$(_c, \"CallingTwilio\");","map":{"version":3,"names":["InputGroup","Form","Button","Card","useEffect","useState","Device","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","CallingTwilio","_s","inputNumber","setInputNumber","varDevice","setVarDevice","setupClientForCall","handleCallPress","e","preventDefault","makeOutgoingCall","handleInput","inputPhoneNumber","target","value","phoneNumber","params","To","console","log","call","connect","on","staticToken","intitializeDevice","err","token","device","logLevel","codecPreferences","addDeviceListeners","response","register","error","message","handleIncomingCall","parameters","From","handleDisconnectedIncomingCall","acceptIncomingCall","accept","rejectIncomingCall","reject","hangupIncomingCall","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Header","Body","Title","Text","onSubmit","Control","placeholder","name","type","onChange","required","variant","_c","$RefreshReg$"],"sources":["/home/swastikksi/Documents/react/twilio-Ksolves/src/Pages/CallingTwilio.js"],"sourcesContent":["import InputGroup from \"react-bootstrap/InputGroup\";\nimport { Form } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { useEffect, useState } from \"react\";\nimport { Device } from \"twilio-client\";\nimport Navbar from \"../Components/Navbar\";\nconst CallingTwilio = () => {\n  const [inputNumber, setInputNumber] = useState(\"\");\n  const [varDevice, setVarDevice] = useState(\"\");\n  useEffect(() => setupClientForCall(), []);\n  const handleCallPress = async (e) => {\n    e.preventDefault();\n    makeOutgoingCall(inputNumber, varDevice);\n  };\n  const handleInput = (e) => {\n    const inputPhoneNumber = e.target.value;\n    setInputNumber(inputPhoneNumber);\n  };\n\n  const makeOutgoingCall = async (phoneNumber, varDevice) => {\n    var params = {\n      To: phoneNumber,\n    };\n\n    if (varDevice) {\n      console.log(`Attempting to call ${params.To} ...`);\n      const call = await varDevice.connect({ params });\n      call.on(\"accept\", () => {\n        console.console.log(\"CALL ACCEPTED\");\n      });\n      call.on(\"disconnect\", () => {\n        console.console.log(\"CALL DISCONNECTED\");\n      });\n      call.on(\"cancel\", () => {\n        console.console.log(\"CALL REJECTED\");\n      });\n    } else {\n      console.log(\"Unable to make call.\");\n    }\n\n    // TODO: Make it so that hangup button can work\n    // outgoingCallHangupButton.onclick = () => {\n    //   log(\"Hanging up ...\");\n    //   call.disconnect();\n    // };\n  };\n\n  const setupClientForCall = () => {\n    console.log(\"Requesting Access Token...\");\n    try {\n      // TODO: fetch token from server\n      const staticToken =\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJqdGkiOiJTS2ZmZTFjNTRiYmI5MTlmYTU3ZTNhM2M1MzVkYzQ1NTc2LTE2ODg0NTExNDEiLCJncmFudHMiOnsiaWRlbnRpdHkiOiJEYXBwZXJEYW5ueU9ha2xhbmQiLCJ2b2ljZSI6eyJpbmNvbWluZyI6eyJhbGxvdyI6dHJ1ZX0sIm91dGdvaW5nIjp7ImFwcGxpY2F0aW9uX3NpZCI6IkFQYmUzYzliOGU4ZTNmN2Y2OTMxMjViMzUzOTYzY2Y5ODQifX19LCJpYXQiOjE2ODg0NTExNDEsImV4cCI6MTY4ODQ1NDc0MSwiaXNzIjoiU0tmZmUxYzU0YmJiOTE5ZmE1N2UzYTNjNTM1ZGM0NTU3NiIsInN1YiI6IkFDOGU2YWQwNTFmYmI2NmJjYWM1ODUzOGI3M2RlYjk0M2EifQ.8aMSdKMTd1Din3wcZn9w_KeW00Bqxt8vZ1kGgde_bn8\";\n      intitializeDevice(staticToken);\n    } catch (err) {\n      console.log(\"setupClientForCall ERR\", err);\n      console.log(\"An error occurred.during setupClientForCall\");\n    }\n  };\n\n  const intitializeDevice = async (token) => {\n    console.log(\"Initializing device\");\n    let device = new Device(token, {\n      logLevel: 1,\n      codecPreferences: [\"opus\", \"pcmu\"],\n    });\n    setVarDevice(device);\n    addDeviceListeners(device);\n    const response = await device.register();\n    console.log(\"response\", response);\n  };\n\n  const addDeviceListeners = (device) => {\n    device.on(\"registered\", () => {\n      console.log(\"Twilio.Device Ready to make and receive calls!\");\n    });\n\n    device.on(\"error\", (error) => {\n      console.log(\"Twilio.Device Error: \" + error.message);\n    });\n\n    device.on(\"incoming\", handleIncomingCall);\n\n    // device.audio.on(\"deviceChange\", updateAllAudioDevices.bind(device));\n\n    // Show audio selection UI if it is supported by the browser.\n    // if (device.audio.isOutputSelectionSupported) {\n    //   audioSelectionDiv.classList.remove(\"hide\");\n    // }\n  };\n\n  // HANDLE INCOMING CALL\n\n  const handleIncomingCall = (call) => {\n    console.log(`Incoming call from ${call.parameters.From}`);\n\n    //TODO: show incoming call div and incoming phone number\n\n    //add event listeners for Accept, Reject, and Hangup buttons\n    // incomingCallAcceptButton.onclick = () => {\n    //   acceptIncomingCall(call);\n    // };\n\n    // incomingCallRejectButton.onclick = () => {\n    //   rejectIncomingCall(call);\n    // };\n\n    // incomingCallHangupButton.onclick = () => {\n    //   hangupIncomingCall(call);\n    // };\n\n    // add event listener to call object\n    call.on(\"cancel\", handleDisconnectedIncomingCall);\n    call.on(\"disconnect\", handleDisconnectedIncomingCall);\n    call.on(\"reject\", handleDisconnectedIncomingCall);\n  };\n\n  // ACCEPT INCOMING CALL\n\n  function acceptIncomingCall(call) {\n    call.accept();\n    console.log(\"Accepted incoming call.\");\n  }\n\n  // REJECT INCOMING CALL\n\n  function rejectIncomingCall(call) {\n    call.reject();\n    console.log(\"Rejected incoming call\");\n  }\n\n  // HANG UP INCOMING CALL\n\n  function hangupIncomingCall(call) {\n    call.disconnect();\n    console.log(\"Hanging up incoming call\");\n  }\n\n  // HANDLE CANCELLED INCOMING CALL\n\n  function handleDisconnectedIncomingCall() {\n    console.log(\"Incoming call ended.\");\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"col-md-6\">\n        <Card className=\"text-center\">\n          <Card.Header>Twilio Voice JavaScript SDK Quickstart</Card.Header>\n          <Card.Body>\n            <Card.Title>Make a Call</Card.Title>\n            <Card.Text>Enter a phone number or client name</Card.Text>\n            <form onSubmit={handleCallPress}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  placeholder=\"Enter phone number\"\n                  name=\"phone\"\n                  type=\"number\"\n                  value={inputNumber}\n                  onChange={handleInput}\n                  required\n                />\n              </InputGroup>\n              <Button variant=\"primary\" type=\"sunmit\">\n                Call\n              </Button>\n            </form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n};\nexport default CallingTwilio;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}